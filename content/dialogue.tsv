Deep Meaning	Expansion	Markup	Probability
[[request motivation]]	Why do you ask?	PushObligation:explain motivation^ResolveObligation:request motivation	[0, 0.4]
[[request motivation]]	Wait, why do you ask?	PushObligation:explain motivation^ResolveObligation:request motivation	[0.4, 0.6000000000000001]
[[request motivation]]	Why do you want to know that?	PushObligation:explain motivation^ResolveObligation:request motivation	[0.6000000000000001, 0.8]
[[request motivation]]	That's a strange question...	PushObligation:explain motivation^ResolveObligation:request motivation	[0.8, 1.0]
[[end conversation]]	Well, I have to go. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye	[0, 0.0012842465753424657]
[[end conversation]]	Nice to see you. Have a great [speaker.game.time_of_day].	PushObligation:goodbye	[0.0012842465753424657, 0.0029965753424657533]
[[end conversation]]	Okay, well, I have to go. Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.0029965753424657533, 0.003424657534246575]
[[end conversation]]	I think I should get back to work. Nice to see you. Bye.	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^MiscFunctions:EndConversation	[0.003424657534246575, 0.004708904109589041]
[[end conversation]]	Well, I really should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.004708904109589041, 0.007277397260273972]
[[end conversation]]	Well, I have to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.007277397260273972, 0.008561643835616438]
[[end conversation]]	I have to get back to work too! Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.008561643835616438, 0.009845890410958904]
[[end conversation]]	Okay, well, I really should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.009845890410958904, 0.011558219178082191]
[[end conversation]]	I'm sorry, but I need to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.011558219178082191, 0.014126712328767123]
[[end conversation]]	Well, I really have to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.014126712328767123, 0.015839041095890412]
[[end conversation]]	Okay, well, I think I should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.015839041095890412, 0.020976027397260275]
[[end conversation]]	I really need to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.020976027397260275, 0.02226027397260274]
[[end conversation]]	I'm sorry, but I think I should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.02226027397260274, 0.023544520547945202]
[[end conversation]]	I'm sorry, but I have to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.023544520547945202, 0.02525684931506849]
[[end conversation]]	I probably should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.02525684931506849, 0.025684931506849314]
[[end conversation]]	I'm sorry, but I need to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.025684931506849314, 0.026969178082191778]
[[end conversation]]	I'm sorry, but I should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.026969178082191778, 0.02825342465753424]
[[end conversation]]	I really should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.02825342465753424, 0.028681506849315065]
[[end conversation]]	I'm going to grab another drink. Nice to see you. Bye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^ResolveObligation:goodbye^MiscFunctions:EndConversation	[0.028681506849315065, 0.02910958904109589]
[[end conversation]]	I really should get back to work too! Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.02910958904109589, 0.03125]
[[end conversation]]	I probably should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.03125, 0.031678082191780824]
[[end conversation]]	I should get back to work. Yeah, bye...	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.031678082191780824, 0.03339041095890411]
[[end conversation]]	Okay, well, I need to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.03339041095890411, 0.03424657534246575]
[[end conversation]]	Okay, well, I really need to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.03424657534246575, 0.0351027397260274]
[[end conversation]]	Okay, well, I think I probably should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.0351027397260274, 0.035958904109589046]
[[end conversation]]	I'm sorry, but I have to go. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.035958904109589046, 0.03638698630136987]
[[end conversation]]	Okay, well, I should really get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.03638698630136987, 0.037671232876712334]
[[end conversation]]	I think I probably should get back to work. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.037671232876712334, 0.03938356164383562]
[[end conversation]]	Well, I need to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.03938356164383562, 0.044520547945205484]
[[end conversation]]	I really should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.044520547945205484, 0.04494863013698631]
[[end conversation]]	I'm sorry, but I should probably head out. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.04494863013698631, 0.04537671232876713]
[[end conversation]]	I think I should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.04537671232876713, 0.045804794520547955]
[[end conversation]]	I'm sorry, but I should probably head out. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.045804794520547955, 0.046660958904109595]
[[end conversation]]	I have to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.046660958904109595, 0.04794520547945206]
[[end conversation]]	I'm sorry, but I think I should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.04794520547945206, 0.04922945205479452]
[[end conversation]]	Well, I should probably head out. Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.04922945205479452, 0.05008561643835617]
[[end conversation]]	I'm sorry, but I really need to get back to work. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working	[0.05008561643835617, 0.05393835616438357]
[[end conversation]]	I think I probably should get back to work. Nice to see you. Bye.	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^MiscFunctions:EndConversation	[0.05393835616438357, 0.05522260273972603]
[[end conversation]]	I really should get back to work too! Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.05522260273972603, 0.0565068493150685]
[[end conversation]]	Well, I think I should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.0565068493150685, 0.060359589041095896]
[[end conversation]]	Well, I should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.060359589041095896, 0.06292808219178082]
[[end conversation]]	I really should get back to work too! Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.06292808219178082, 0.06378424657534247]
[[end conversation]]	I need to get back to work too! Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.06378424657534247, 0.06506849315068494]
[[end conversation]]	I'm sorry, but I probably should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.06506849315068494, 0.06678082191780824]
[[end conversation]]	I really have to get back to work too! Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.06678082191780824, 0.06763698630136988]
[[end conversation]]	I'm sorry, but I need to get back to work. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.06763698630136988, 0.07020547945205481]
[[end conversation]]	I'm sorry, but I have to run. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.07020547945205481, 0.07063356164383564]
[[end conversation]]	I have to get back to work too! Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.07063356164383564, 0.07277397260273974]
[[end conversation]]	Okay, well, I should probably get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.07277397260273974, 0.07405821917808221]
[[end conversation]]	I'm sorry, but I should get back to work. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working	[0.07405821917808221, 0.07534246575342468]
[[end conversation]]	I'm sorry, but I think I probably should get back to work. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.07534246575342468, 0.07791095890410961]
[[end conversation]]	I think I should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.07791095890410961, 0.07833904109589043]
[[end conversation]]	Sure. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^PushObligation:goodbye	[0.07833904109589043, 0.07919520547945208]
[[end conversation]]	I'm sorry, but I should probably get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.07919520547945208, 0.08047945205479455]
[[end conversation]]	I probably should get back to work too! Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.08047945205479455, 0.08261986301369866]
[[end conversation]]	I should probably head out. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.08261986301369866, 0.08390410958904113]
[[end conversation]]	I probably should get back to work too! Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.08390410958904113, 0.08690068493150688]
[[end conversation]]	Okay, well, I should probably head out. Nice to see you. Goodbye.	PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.08690068493150688, 0.08861301369863017]
[[end conversation]]	I think I probably should get back to work too! Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.08861301369863017, 0.09075342465753428]
[[end conversation]]	I think I should get back to work too! Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.09075342465753428, 0.0933219178082192]
[[end conversation]]	I probably should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.0933219178082192, 0.09375000000000003]
[[end conversation]]	No problem! Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.09375000000000003, 0.09460616438356168]
[[end conversation]]	I'm sorry, but I really have to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.09460616438356168, 0.09589041095890415]
[[end conversation]]	Okay, well, I need to get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.09589041095890415, 0.09631849315068497]
[[end conversation]]	I'm sorry, but I really should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.09631849315068497, 0.09803082191780826]
[[end conversation]]	I should probably get back to work. Nice to see you. Bye.	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^MiscFunctions:EndConversation	[0.09803082191780826, 0.09931506849315073]
[[end conversation]]	Okay, well, I have to go. Yeah, bye...	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4	[0.09931506849315073, 0.09974315068493156]
[[end conversation]]	I'm sorry, but I should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.09974315068493156, 0.10102739726027403]
[[end conversation]]	Okay, well, I should really get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.10102739726027403, 0.10145547945205485]
[[end conversation]]	I'm sorry, but I have to go. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.10145547945205485, 0.1023116438356165]
[[end conversation]]	Well, I have to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.1023116438356165, 0.1061643835616439]
[[end conversation]]	I'm sorry, but I probably should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.1061643835616439, 0.1078767123287672]
[[end conversation]]	Well, I have to run. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.1078767123287672, 0.10958904109589049]
[[end conversation]]	I should probably get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.10958904109589049, 0.11001712328767131]
[[end conversation]]	I think I should get back to work too! Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.11001712328767131, 0.11643835616438364]
[[end conversation]]	Well, I'm going to grab another drink. Nice to see you. Bye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^ResolveObligation:goodbye^MiscFunctions:EndConversation	[0.11643835616438364, 0.11729452054794529]
[[end conversation]]	Okay, well, I should probably get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.11729452054794529, 0.11815068493150693]
[[end conversation]]	I really should get back to work too! Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.11815068493150693, 0.11900684931506858]
[[end conversation]]	I'm sorry, but I think I probably should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.11900684931506858, 0.12029109589041105]
[[end conversation]]	Sure. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^PushObligation:goodbye	[0.12029109589041105, 0.1211472602739727]
[[end conversation]]	I have to get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.1211472602739727, 0.12157534246575352]
[[end conversation]]	I think I probably should get back to work too! Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.12157534246575352, 0.12371575342465763]
[[end conversation]]	I'm sorry, but I should probably get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.12371575342465763, 0.12500000000000008]
[[end conversation]]	I'm sorry, but I have to go. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.12500000000000008, 0.1254280821917809]
[[end conversation]]	Okay, well, I have to run. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.1254280821917809, 0.1271404109589042]
[[end conversation]]	I should really get back to work. Yeah, bye...	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.1271404109589042, 0.12842465753424664]
[[end conversation]]	I need to get back to work too! Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.12842465753424664, 0.13056506849315075]
[[end conversation]]	I need to get back to work too! Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.13056506849315075, 0.1314212328767124]
[[end conversation]]	Okay, well, I have to get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.1314212328767124, 0.1318493150684932]
[[end conversation]]	Well, I should probably head out. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye	[0.1318493150684932, 0.13227739726027402]
[[end conversation]]	We really have to get back to work.	Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.13227739726027402, 0.13313356164383566]
[[end conversation]]	Well, I should probably get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.13313356164383566, 0.13484589041095896]
[[end conversation]]	I have to go. Nice to see you. Have a great [speaker.game.time_of_day].	PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.13484589041095896, 0.13527397260273977]
[[end conversation]]	Okay, well, I think I should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.13527397260273977, 0.1378424657534247]
[[end conversation]]	I need to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.1378424657534247, 0.1438356164383562]
[[end conversation]]	I have to go. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.1438356164383562, 0.14426369863013702]
[[end conversation]]	I think I should get back to work too! Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.14426369863013702, 0.14683219178082196]
[[end conversation]]	Okay, well, I need to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.14683219178082196, 0.1476883561643836]
[[end conversation]]	Well, I should really get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.1476883561643836, 0.15025684931506855]
[[end conversation]]	I should get back to work too! Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.15025684931506855, 0.151541095890411]
[[end conversation]]	I really have to get back to work too! Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.151541095890411, 0.15282534246575347]
[[end conversation]]	I should get back to work. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.15282534246575347, 0.15625000000000006]
[[end conversation]]	Okay, well, I think I should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.15625000000000006, 0.1575342465753425]
[[end conversation]]	I really need to get back to work. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.1575342465753425, 0.16053082191780826]
[[end conversation]]	I should get back to work too! Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.16053082191780826, 0.1613869863013699]
[[end conversation]]	I'm sorry, but I think I should get back to work. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working	[0.1613869863013699, 0.16267123287671237]
[[end conversation]]	I think I probably should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.16267123287671237, 0.16309931506849318]
[[end conversation]]	I'm sorry, but I probably should get back to work. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working	[0.16309931506849318, 0.16481164383561647]
[[end conversation]]	Well, I should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.16481164383561647, 0.16609589041095893]
[[end conversation]]	Okay, well, I'm going to grab another drink. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.16609589041095893, 0.16695205479452058]
[[end conversation]]	I'm sorry, but I really should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.16695205479452058, 0.17037671232876717]
[[end conversation]]	I think I should get back to work too! Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.17037671232876717, 0.17551369863013702]
[[end conversation]]	I really need to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.17551369863013702, 0.17679794520547948]
[[end conversation]]	I should really get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.17679794520547948, 0.1772260273972603]
[[end conversation]]	I should get back to work too! Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.1772260273972603, 0.17893835616438358]
[[end conversation]]	Well, I probably should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.17893835616438358, 0.1810787671232877]
[[end conversation]]	I'm going to grab another drink. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.1810787671232877, 0.1815068493150685]
[[end conversation]]	Well, I have to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.1815068493150685, 0.18664383561643835]
[[end conversation]]	Okay, well, I really have to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.18664383561643835, 0.1875]
[[end conversation]]	Okay, well, I should probably head out. Nice to see you. See you later.	PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.1875, 0.18878424657534246]
[[end conversation]]	I'm sorry, but I should probably head out. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.18878424657534246, 0.18921232876712327]
[[end conversation]]	Okay, well, I'm going to grab another drink. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.18921232876712327, 0.19092465753424656]
[[end conversation]]	Okay, well, I really have to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.19092465753424656, 0.19220890410958902]
[[end conversation]]	I probably should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.19220890410958902, 0.19434931506849312]
[[end conversation]]	Well, I should really get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.19434931506849312, 0.19820205479452052]
[[end conversation]]	I should probably get back to work too! Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.19820205479452052, 0.2016267123287671]
[[end conversation]]	I really have to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.2016267123287671, 0.20248287671232876]
[[end conversation]]	I need to get back to work too! Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.20248287671232876, 0.20376712328767121]
[[end conversation]]	I should probably head out. Nice to see you. Have a great [speaker.game.time_of_day].	PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.20376712328767121, 0.20505136986301367]
[[end conversation]]	Well, I really should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.20505136986301367, 0.20633561643835613]
[[end conversation]]	I think I should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.20633561643835613, 0.20676369863013694]
[[end conversation]]	Well, I should probably get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.20676369863013694, 0.20847602739726023]
[[end conversation]]	I really have to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.20847602739726023, 0.20933219178082188]
[[end conversation]]	I'm sorry, but I should really get back to work. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working	[0.20933219178082188, 0.21061643835616434]
[[end conversation]]	Okay, well, I have to go. Nice to see you. Have a great [speaker.game.time_of_day].	PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.21061643835616434, 0.21147260273972598]
[[end conversation]]	I have to go anyway. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^MiscFunctions:EndConversation	[0.21147260273972598, 0.2119006849315068]
[[end conversation]]	Okay, well, I need to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.2119006849315068, 0.21318493150684925]
[[end conversation]]	I'm sorry, but I need to get back to work. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working	[0.21318493150684925, 0.2144691780821917]
[[end conversation]]	Well, I have to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.2144691780821917, 0.21575342465753417]
[[end conversation]]	I should probably get back to work too! Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.21575342465753417, 0.21789383561643827]
[[end conversation]]	I'm sorry, but I really should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.21789383561643827, 0.21960616438356156]
[[end conversation]]	I'm sorry, but I really have to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.21960616438356156, 0.2221746575342465]
[[end conversation]]	Well, I'm going to grab another drink. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.2221746575342465, 0.22260273972602732]
[[end conversation]]	I'm sorry, but I have to run. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.22260273972602732, 0.22303082191780813]
[[end conversation]]	I have to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.22303082191780813, 0.22345890410958894]
[[end conversation]]	I'm sorry, but I have to run. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.22345890410958894, 0.22431506849315058]
[[end conversation]]	I'm sorry, but I'm going to grab another drink. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.22431506849315058, 0.2247431506849314]
[[end conversation]]	Sure. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^PushObligation:goodbye^MiscFunctions:EndConversation	[0.2247431506849314, 0.22559931506849304]
[[end conversation]]	I should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.22559931506849304, 0.22602739726027385]
[[end conversation]]	Well, I should probably head out. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye	[0.22602739726027385, 0.22645547945205466]
[[end conversation]]	I have to go. Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.22645547945205466, 0.22688356164383547]
[[end conversation]]	I'm sorry, but I have to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.22688356164383547, 0.23030821917808203]
[[end conversation]]	Okay, well, I really should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.23030821917808203, 0.23073630136986284]
[[end conversation]]	Well, I think I should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.23073630136986284, 0.2320205479452053]
[[end conversation]]	I really have to get back to work too! Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.2320205479452053, 0.23330479452054775]
[[end conversation]]	Well, I probably should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.23330479452054775, 0.23758561643835596]
[[end conversation]]	Okay, well, I probably should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.23758561643835596, 0.2384417808219176]
[[end conversation]]	I should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.2384417808219176, 0.23886986301369842]
[[end conversation]]	I really have to get back to work too! Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.23886986301369842, 0.2405821917808217]
[[end conversation]]	I need to get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.2405821917808217, 0.24101027397260252]
[[end conversation]]	Okay, well, I think I probably should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.24101027397260252, 0.24272260273972582]
[[end conversation]]	I think I probably should get back to work too! Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.24272260273972582, 0.24400684931506827]
[[end conversation]]	I think I should get back to work. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.24400684931506827, 0.24529109589041073]
[[end conversation]]	Well, I should probably head out. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye	[0.24529109589041073, 0.24571917808219154]
[[end conversation]]	Well, I really need to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.24571917808219154, 0.24828767123287648]
[[end conversation]]	I really should get back to work. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.24828767123287648, 0.24957191780821894]
[[end conversation]]	Well, I really need to get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.24957191780821894, 0.2547089041095888]
[[end conversation]]	Well, I have to go. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye	[0.2547089041095888, 0.2551369863013696]
[[end conversation]]	I need to get back to work. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.2551369863013696, 0.2581335616438354]
[[end conversation]]	Okay, well, I really have to get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.2581335616438354, 0.2585616438356162]
[[end conversation]]	Well, I really have to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.2585616438356162, 0.2654109589041094]
[[end conversation]]	I think I probably should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.2654109589041094, 0.2658390410958902]
[[end conversation]]	I think I probably should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.2658390410958902, 0.266267123287671]
[[end conversation]]	Well, I should probably get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.266267123287671, 0.2696917808219176]
[[end conversation]]	Okay, well, I probably should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.2696917808219176, 0.2705479452054792]
[[end conversation]]	I'm sorry, but I really should get back to work. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working	[0.2705479452054792, 0.2722602739726025]
[[end conversation]]	I really should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.2722602739726025, 0.273544520547945]
[[end conversation]]	Well, I really have to get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.273544520547945, 0.27696917808219157]
[[end conversation]]	I really should get back to work. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.27696917808219157, 0.27868150684931486]
[[end conversation]]	Okay, well, I have to get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.27868150684931486, 0.2791095890410957]
[[end conversation]]	I'm sorry, but I should probably head out. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.2791095890410957, 0.2799657534246573]
[[end conversation]]	I should really get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.2799657534246573, 0.2833904109589039]
[[end conversation]]	Okay, well, I have to run. Nice to see you. Take care.	PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.2833904109589039, 0.2851027397260272]
[[end conversation]]	I'm sorry, but I have to go. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.2851027397260272, 0.285530821917808]
[[end conversation]]	Well, I have to run. Yeah, bye...	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4	[0.285530821917808, 0.2863869863013696]
[[end conversation]]	I'm sorry, but I have to run. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.2863869863013696, 0.2868150684931504]
[[end conversation]]	I have to go anyway. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.2868150684931504, 0.28767123287671204]
[[end conversation]]	Okay, well, I should probably head out. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.28767123287671204, 0.28852739726027365]
[[end conversation]]	I'm sorry, but I think I probably should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.28852739726027365, 0.29109589041095857]
[[end conversation]]	I should get back to work too! Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.29109589041095857, 0.2932363013698627]
[[end conversation]]	I'm sorry, but I really have to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.2932363013698627, 0.29452054794520516]
[[end conversation]]	I'm sorry, but I think I probably should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.29452054794520516, 0.29580479452054764]
[[end conversation]]	I'm sorry, but I'm going to grab another drink. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4	[0.29580479452054764, 0.29666095890410926]
[[end conversation]]	Well, I think I probably should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.29666095890410926, 0.30179794520547915]
[[end conversation]]	Okay, well, I really need to get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.30179794520547915, 0.30222602739725996]
[[end conversation]]	I have to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.30222602739725996, 0.30265410958904077]
[[end conversation]]	Okay, well, I have to run. Yeah, bye...	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4	[0.30265410958904077, 0.3035102739726024]
[[end conversation]]	I need to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.3035102739726024, 0.3039383561643832]
[[end conversation]]	I'm sorry, but I really have to get back to work. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working	[0.3039383561643832, 0.3052226027397257]
[[end conversation]]	Okay, well, I have to run. Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.3052226027397257, 0.3060787671232873]
[[end conversation]]	I really have to get back to work. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.3060787671232873, 0.3073630136986298]
[[end conversation]]	I'm sorry, but I really should get back to work. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.3073630136986298, 0.3107876712328764]
[[end conversation]]	I think I probably should get back to work. Yeah, bye...	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.3107876712328764, 0.311643835616438]
[[end conversation]]	Well, I have to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.311643835616438, 0.3129280821917805]
[[end conversation]]	I should get back to work. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.3129280821917805, 0.3150684931506846]
[[end conversation]]	Well, I have to run. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye	[0.3150684931506846, 0.31635273972602707]
[[end conversation]]	I should probably get back to work. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.31635273972602707, 0.31806506849315036]
[[end conversation]]	Okay, well, I have to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.31806506849315036, 0.318921232876712]
[[end conversation]]	I probably should get back to work too! Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.318921232876712, 0.3210616438356161]
[[end conversation]]	I'm sorry, but I have to go. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.3210616438356161, 0.3214897260273969]
[[end conversation]]	I have to go. Yeah, bye...	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4	[0.3214897260273969, 0.3219178082191777]
[[end conversation]]	I'm sorry, but I probably should get back to work. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.3219178082191777, 0.3253424657534243]
[[end conversation]]	I'm sorry, but I really should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.3253424657534243, 0.3270547945205476]
[[end conversation]]	I'm sorry, but I really need to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.3270547945205476, 0.330907534246575]
[[end conversation]]	I really need to get back to work too! Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.330907534246575, 0.3317636986301366]
[[end conversation]]	Well, I probably should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.3317636986301366, 0.340325342465753]
[[end conversation]]	Okay, well, I really need to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.340325342465753, 0.3416095890410955]
[[end conversation]]	Okay, well, I should probably get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.3416095890410955, 0.3424657534246571]
[[end conversation]]	Nice to see you. See you later.	PushObligation:goodbye	[0.3424657534246571, 0.34460616438356123]
[[end conversation]]	I think I should get back to work. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.34460616438356123, 0.3463184931506845]
[[end conversation]]	Okay, well, I think I should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.3463184931506845, 0.3501712328767119]
[[end conversation]]	Well, I really should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.3501712328767119, 0.3553082191780818]
[[end conversation]]	Okay, well, I think I should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.3553082191780818, 0.3565924657534243]
[[end conversation]]	I should probably get back to work too! Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.3565924657534243, 0.3578767123287668]
[[end conversation]]	I'm sorry, but I should really get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.3578767123287668, 0.35916095890410926]
[[end conversation]]	I should really get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.35916095890410926, 0.36130136986301337]
[[end conversation]]	Okay, well, I think I should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.36130136986301337, 0.3638698630136983]
[[end conversation]]	I have to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.3638698630136983, 0.3642979452054791]
[[end conversation]]	Okay, well, I have to go. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.3642979452054791, 0.3651541095890407]
[[end conversation]]	I really have to get back to work. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.3651541095890407, 0.366866438356164]
[[end conversation]]	Okay, well, I should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.366866438356164, 0.3681506849315065]
[[end conversation]]	Well, I'm going to grab another drink. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.3681506849315065, 0.3690068493150681]
[[end conversation]]	I have to get back to work. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.3690068493150681, 0.3707191780821914]
[[end conversation]]	Okay, well, I should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.3707191780821914, 0.3724315068493147]
[[end conversation]]	Well, I think I probably should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.3724315068493147, 0.3801369863013695]
[[end conversation]]	We think I should get back to work.	Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.3801369863013695, 0.381421232876712]
[[end conversation]]	I think I should get back to work. Yeah, bye...	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.381421232876712, 0.3822773972602736]
[[end conversation]]	Okay, well, I should probably get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.3822773972602736, 0.3831335616438352]
[[end conversation]]	Okay, well, I should probably head out. Yeah, bye...	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4	[0.3831335616438352, 0.38356164383561603]
[[end conversation]]	Well, I think I probably should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.38356164383561603, 0.38613013698630094]
[[end conversation]]	Well, I have to get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.38613013698630094, 0.38869863013698586]
[[end conversation]]	I have to get back to work too! Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.38869863013698586, 0.39041095890410915]
[[end conversation]]	Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^PushObligation:goodbye^MiscFunctions:EndConversation	[0.39041095890410915, 0.39126712328767077]
[[end conversation]]	Okay, well, I should really get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.39126712328767077, 0.3921232876712324]
[[end conversation]]	Well, I think I probably should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.3921232876712324, 0.3946917808219173]
[[end conversation]]	Okay, well, I have to go. Nice to see you. Goodbye.	PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.3946917808219173, 0.3964041095890406]
[[end conversation]]	I really should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.3964041095890406, 0.3968321917808214]
[[end conversation]]	I really have to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.3968321917808214, 0.39768835616438303]
[[end conversation]]	Okay, well, I probably should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.39768835616438303, 0.3994006849315063]
[[end conversation]]	I have to run. Nice to see you. Goodbye.	PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.3994006849315063, 0.39982876712328713]
[[end conversation]]	I should really get back to work too! Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.39982876712328713, 0.4011130136986296]
[[end conversation]]	Well, I really should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.4011130136986296, 0.404965753424657]
[[end conversation]]	Okay, well, I think I should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.404965753424657, 0.40753424657534193]
[[end conversation]]	Okay, well, I should probably head out. Nice to see you. Have a great [speaker.game.time_of_day].	PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.40753424657534193, 0.40839041095890355]
[[end conversation]]	I really need to get back to work too! Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.40839041095890355, 0.40967465753424603]
[[end conversation]]	I should really get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.40967465753424603, 0.41010273972602684]
[[end conversation]]	I'm sorry, but I think I probably should get back to work. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working	[0.41010273972602684, 0.41138698630136933]
[[end conversation]]	No problem! Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4	[0.41138698630136933, 0.41224315068493095]
[[end conversation]]	Okay, well, I really have to get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.41224315068493095, 0.41267123287671176]
[[end conversation]]	Well, I have to run. Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.41267123287671176, 0.4135273972602734]
[[end conversation]]	I think I probably should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.4135273972602734, 0.4139554794520542]
[[end conversation]]	I have to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.4139554794520542, 0.414383561643835]
[[end conversation]]	I'm sorry, but I really need to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.414383561643835, 0.4182363013698624]
[[end conversation]]	I really have to get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.4182363013698624, 0.419092465753424]
[[end conversation]]	Well, I think I should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.419092465753424, 0.4242294520547939]
[[end conversation]]	Well, I should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.4242294520547939, 0.4293664383561638]
[[end conversation]]	I should really get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.4293664383561638, 0.4297945205479446]
[[end conversation]]	I probably should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.4297945205479446, 0.4302226027397254]
[[end conversation]]	No problem! Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4	[0.4302226027397254, 0.431078767123287]
[[end conversation]]	Okay, well, I really should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.431078767123287, 0.43150684931506783]
[[end conversation]]	I should really get back to work. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.43150684931506783, 0.43407534246575274]
[[end conversation]]	Well, I need to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.43407534246575274, 0.4409246575342459]
[[end conversation]]	I probably should get back to work. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.4409246575342459, 0.44349315068493084]
[[end conversation]]	I'm sorry, but I should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.44349315068493084, 0.44606164383561575]
[[end conversation]]	Well, I should probably get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.44606164383561575, 0.44777397260273905]
[[end conversation]]	I have to run. Nice to see you. See you later.	PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.44777397260273905, 0.44820205479451986]
[[end conversation]]	I'm going to grab another drink. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.44820205479451986, 0.44863013698630066]
[[end conversation]]	I should get back to work too! Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.44863013698630066, 0.4494863013698623]
[[end conversation]]	I probably should get back to work too! Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.4494863013698623, 0.4511986301369856]
[[end conversation]]	Sure. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4	[0.4511986301369856, 0.4516267123287664]
[[end conversation]]	I should probably get back to work too! Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.4516267123287664, 0.4533390410958897]
[[end conversation]]	I'm sorry, but I should really get back to work. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.4533390410958897, 0.4559075342465746]
[[end conversation]]	I think I probably should get back to work too! Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.4559075342465746, 0.4589041095890404]
[[end conversation]]	Well, I need to get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.4589041095890404, 0.46232876712328697]
[[end conversation]]	I really need to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.46232876712328697, 0.46361301369862945]
[[end conversation]]	Okay, well, I have to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.46361301369862945, 0.46446917808219107]
[[end conversation]]	Okay, well, I should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.46446917808219107, 0.4648972602739719]
[[end conversation]]	I have to get back to work too! Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.4648972602739719, 0.46618150684931436]
[[end conversation]]	I have to run. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.46618150684931436, 0.4666095890410952]
[[end conversation]]	I should probably head out. Nice to see you. Take care.	PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.4666095890410952, 0.46789383561643766]
[[end conversation]]	Okay, well, I should really get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.46789383561643766, 0.46960616438356095]
[[end conversation]]	I should probably head out. Yeah, bye...	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4	[0.46960616438356095, 0.47089041095890344]
[[end conversation]]	Okay, well, I really need to get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.47089041095890344, 0.47131849315068425]
[[end conversation]]	I think I probably should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.47131849315068425, 0.47174657534246506]
[[end conversation]]	I'm sorry, but I'm going to grab another drink. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4	[0.47174657534246506, 0.47217465753424587]
[[end conversation]]	I need to get back to work. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.47217465753424587, 0.47559931506849246]
[[end conversation]]	I have to go anyway. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.47559931506849246, 0.47602739726027327]
[[end conversation]]	Okay, well, I should probably get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.47602739726027327, 0.4764554794520541]
[[end conversation]]	I think I should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.4764554794520541, 0.4768835616438349]
[[end conversation]]	Okay, well, I really have to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.4768835616438349, 0.4777397260273965]
[[end conversation]]	I'm sorry, but I should really get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.4777397260273965, 0.479023972602739]
[[end conversation]]	I should really get back to work. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.479023972602739, 0.4807363013698623]
[[end conversation]]	I'm sorry, but I have to run. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.4807363013698623, 0.4811643835616431]
[[end conversation]]	Okay, well, I think I probably should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.4811643835616431, 0.4828767123287664]
[[end conversation]]	No problem! Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4	[0.4828767123287664, 0.4833047945205472]
[[end conversation]]	I really need to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.4833047945205472, 0.4845890410958897]
[[end conversation]]	We should probably get back to work.	Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.4845890410958897, 0.486301369863013]
[[end conversation]]	I'm sorry, but I think I should get back to work. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.486301369863013, 0.4888698630136979]
[[end conversation]]	I'm sorry, but I should probably head out. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.4888698630136979, 0.4892979452054787]
[[end conversation]]	I have to get back to work. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.4892979452054787, 0.4905821917808212]
[[end conversation]]	I should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.4905821917808212, 0.4948630136986294]
[[end conversation]]	Well, I should probably head out. Yeah, bye...	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4	[0.4948630136986294, 0.495719178082191]
[[end conversation]]	I have to go anyway. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.495719178082191, 0.4961472602739718]
[[end conversation]]	We probably should get back to work.	Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.4961472602739718, 0.4974315068493143]
[[end conversation]]	Well, I probably should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.4974315068493143, 0.5017123287671226]
[[end conversation]]	I'm going to grab another drink. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5017123287671226, 0.5021404109589034]
[[end conversation]]	I should probably get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.5021404109589034, 0.5025684931506842]
[[end conversation]]	I need to get back to work. Nice to see you. Bye.	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^MiscFunctions:EndConversation	[0.5025684931506842, 0.50556506849315]
[[end conversation]]	I think I probably should get back to work. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.50556506849315, 0.5068493150684924]
[[end conversation]]	I'm sorry, but I have to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5068493150684924, 0.5085616438356156]
[[end conversation]]	I should probably get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5085616438356156, 0.5111301369863006]
[[end conversation]]	I'm sorry, but I have to run. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5111301369863006, 0.5119863013698622]
[[end conversation]]	I need to get back to work. Yeah, bye...	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5119863013698622, 0.5136986301369855]
[[end conversation]]	I'm going to grab another drink. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5136986301369855, 0.5141267123287663]
[[end conversation]]	Well, I really should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5141267123287663, 0.5154109589041087]
[[end conversation]]	I should probably get back to work too! Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.5154109589041087, 0.517123287671232]
[[end conversation]]	Okay, well, I really need to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.517123287671232, 0.5188356164383552]
[[end conversation]]	I'm sorry, but I think I probably should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5188356164383552, 0.5201198630136976]
[[end conversation]]	I'm sorry, but I should probably get back to work. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5201198630136976, 0.5226883561643826]
[[end conversation]]	I think I probably should get back to work too! Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.5226883561643826, 0.5244006849315058]
[[end conversation]]	We should really get back to work.	Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5244006849315058, 0.5252568493150674]
[[end conversation]]	No problem! Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4	[0.5252568493150674, 0.5256849315068483]
[[end conversation]]	Okay, well, I probably should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.5256849315068483, 0.5261130136986291]
[[end conversation]]	Well, I really need to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5261130136986291, 0.528681506849314]
[[end conversation]]	Okay, well, I'm going to grab another drink. Nice to see you. Bye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^ResolveObligation:goodbye^MiscFunctions:EndConversation	[0.528681506849314, 0.5295376712328757]
[[end conversation]]	Okay, well, I'm going to grab another drink. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.5295376712328757, 0.5312499999999989]
[[end conversation]]	I really have to get back to work. Nice to see you. Bye.	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^MiscFunctions:EndConversation	[0.5312499999999989, 0.5325342465753413]
[[end conversation]]	I have to run. Nice to see you. Have a great [speaker.game.time_of_day].	PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5325342465753413, 0.5329623287671221]
[[end conversation]]	Well, I have to go. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5329623287671221, 0.5346746575342454]
[[end conversation]]	I should really get back to work too! Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.5346746575342454, 0.535530821917807]
[[end conversation]]	I really should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.535530821917807, 0.5359589041095878]
[[end conversation]]	I think I should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5359589041095878, 0.5385273972602728]
[[end conversation]]	I should really get back to work. Nice to see you. Bye.	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^MiscFunctions:EndConversation	[0.5385273972602728, 0.540239726027396]
[[end conversation]]	I should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.540239726027396, 0.5406678082191768]
[[end conversation]]	Okay, well, I really need to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.5406678082191768, 0.5415239726027384]
[[end conversation]]	Okay, well, I should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.5415239726027384, 0.5423801369863]
[[end conversation]]	I should probably get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5423801369863, 0.5428082191780809]
[[end conversation]]	Well, I should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5428082191780809, 0.5466609589041083]
[[end conversation]]	Okay, well, I'm going to grab another drink. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.5466609589041083, 0.5483732876712315]
[[end conversation]]	I'm sorry, but I'm going to grab another drink. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4	[0.5483732876712315, 0.5488013698630123]
[[end conversation]]	I probably should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5488013698630123, 0.5492294520547931]
[[end conversation]]	I think I should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5492294520547931, 0.5496575342465739]
[[end conversation]]	I need to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5496575342465739, 0.5500856164383547]
[[end conversation]]	I should really get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5500856164383547, 0.5505136986301356]
[[end conversation]]	I have to run. Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.5505136986301356, 0.5509417808219164]
[[end conversation]]	I'm sorry, but I should probably head out. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5509417808219164, 0.5513698630136972]
[[end conversation]]	I probably should get back to work too! Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.5513698630136972, 0.5539383561643821]
[[end conversation]]	Okay, well, I have to go. Nice to see you. See you later.	PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.5539383561643821, 0.5552226027397246]
[[end conversation]]	I should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.5552226027397246, 0.5556506849315054]
[[end conversation]]	Okay, well, I have to run. Nice to see you. Have a great [speaker.game.time_of_day].	PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.5556506849315054, 0.5573630136986286]
[[end conversation]]	I should really get back to work too! Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.5573630136986286, 0.558647260273971]
[[end conversation]]	I'm sorry, but I really need to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.558647260273971, 0.5663527397260258]
[[end conversation]]	I'm sorry, but I'm going to grab another drink. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.5663527397260258, 0.5667808219178067]
[[end conversation]]	Okay, well, I should probably head out. Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.5667808219178067, 0.5672089041095875]
[[end conversation]]	I need to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5672089041095875, 0.5693493150684916]
[[end conversation]]	Okay, well, I think I probably should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5693493150684916, 0.5727739726027382]
[[end conversation]]	I really need to get back to work too! Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.5727739726027382, 0.5744863013698615]
[[end conversation]]	Well, I should really get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5744863013698615, 0.5757705479452039]
[[end conversation]]	I'm sorry, but I really have to get back to work. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5757705479452039, 0.5783390410958889]
[[end conversation]]	I think I probably should get back to work. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5783390410958889, 0.5800513698630121]
[[end conversation]]	I probably should get back to work too! Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.5800513698630121, 0.5847602739726011]
[[end conversation]]	I'm sorry, but I need to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5847602739726011, 0.5860445205479435]
[[end conversation]]	I should probably get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5860445205479435, 0.5864726027397243]
[[end conversation]]	I really need to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5864726027397243, 0.5886130136986285]
[[end conversation]]	Well, I think I probably should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5886130136986285, 0.5937499999999983]
[[end conversation]]	I should probably get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5937499999999983, 0.5941780821917791]
[[end conversation]]	I'm sorry, but I think I should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.5941780821917791, 0.5967465753424641]
[[end conversation]]	Well, I should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.5967465753424641, 0.5993150684931491]
[[end conversation]]	I'm sorry, but I really should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.5993150684931491, 0.6010273972602723]
[[end conversation]]	I really should get back to work too! Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.6010273972602723, 0.6027397260273956]
[[end conversation]]	Well, I really have to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6027397260273956, 0.6044520547945188]
[[end conversation]]	I should get back to work. Nice to see you. Bye.	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^MiscFunctions:EndConversation	[0.6044520547945188, 0.606592465753423]
[[end conversation]]	I should really get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.606592465753423, 0.6070205479452038]
[[end conversation]]	I'm sorry, but I really have to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.6070205479452038, 0.6083047945205462]
[[end conversation]]	I'm sorry, but I should probably get back to work. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working	[0.6083047945205462, 0.6095890410958886]
[[end conversation]]	I really need to get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.6095890410958886, 0.6108732876712311]
[[end conversation]]	I should get back to work too! Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.6108732876712311, 0.6121575342465735]
[[end conversation]]	I think I probably should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.6121575342465735, 0.6147260273972585]
[[end conversation]]	Well, I need to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6147260273972585, 0.6164383561643817]
[[end conversation]]	I should get back to work too! Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.6164383561643817, 0.6177226027397241]
[[end conversation]]	I should really get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.6177226027397241, 0.6181506849315049]
[[end conversation]]	I really should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.6181506849315049, 0.6185787671232857]
[[end conversation]]	Okay, well, I really should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6185787671232857, 0.6198630136986282]
[[end conversation]]	I probably should get back to work. Yeah, bye...	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.6198630136986282, 0.6211472602739706]
[[end conversation]]	Okay, well, I should probably head out. Nice to see you. Take care.	PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.6211472602739706, 0.6220034246575322]
[[end conversation]]	I really need to get back to work. Yeah, bye...	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.6220034246575322, 0.6237157534246555]
[[end conversation]]	Well, I should probably head out. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.6237157534246555, 0.6254280821917787]
[[end conversation]]	Well, I need to get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.6254280821917787, 0.6288527397260253]
[[end conversation]]	Well, I probably should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6288527397260253, 0.6309931506849294]
[[end conversation]]	Well, I really need to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6309931506849294, 0.6335616438356144]
[[end conversation]]	Well, I need to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6335616438356144, 0.6352739726027377]
[[end conversation]]	Well, I should really get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.6352739726027377, 0.6404109589041075]
[[end conversation]]	Okay, well, I probably should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.6404109589041075, 0.6408390410958883]
[[end conversation]]	I really have to get back to work too! Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.6408390410958883, 0.6421232876712307]
[[end conversation]]	I think I probably should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6421232876712307, 0.6425513698630115]
[[end conversation]]	I'm sorry, but I have to go. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.6425513698630115, 0.6434075342465732]
[[end conversation]]	I'm sorry, but I really need to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.6434075342465732, 0.6472602739726006]
[[end conversation]]	Okay, well, I'm going to grab another drink. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.6472602739726006, 0.6506849315068471]
[[end conversation]]	Well, I really have to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6506849315068471, 0.6523972602739704]
[[end conversation]]	I really have to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6523972602739704, 0.653253424657532]
[[end conversation]]	I probably should get back to work. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.653253424657532, 0.6549657534246552]
[[end conversation]]	I probably should get back to work too! Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.6549657534246552, 0.6566780821917785]
[[end conversation]]	I'm sorry, but I'm going to grab another drink. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.6566780821917785, 0.6575342465753401]
[[end conversation]]	Okay, well, I think I probably should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.6575342465753401, 0.6583904109589017]
[[end conversation]]	I need to get back to work too! Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.6583904109589017, 0.660102739726025]
[[end conversation]]	Sure. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^PushObligation:goodbye	[0.660102739726025, 0.6618150684931482]
[[end conversation]]	Well, I think I probably should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6618150684931482, 0.6643835616438332]
[[end conversation]]	I think I probably should get back to work too! Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.6643835616438332, 0.6673801369862989]
[[end conversation]]	Okay, well, I should probably get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.6673801369862989, 0.6678082191780798]
[[end conversation]]	I'm sorry, but I should probably get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6678082191780798, 0.6703767123287647]
[[end conversation]]	Well, I'm going to grab another drink. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.6703767123287647, 0.6716609589041072]
[[end conversation]]	Okay, well, I really need to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6716609589041072, 0.6725171232876688]
[[end conversation]]	No problem! Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4	[0.6725171232876688, 0.6738013698630112]
[[end conversation]]	I probably should get back to work. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.6738013698630112, 0.6759417808219154]
[[end conversation]]	I have to get back to work too! Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.6759417808219154, 0.679366438356162]
[[end conversation]]	Okay, well, I need to get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.679366438356162, 0.6797945205479428]
[[end conversation]]	I'm sorry, but I should probably get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6797945205479428, 0.6810787671232852]
[[end conversation]]	Well, I should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6810787671232852, 0.6823630136986276]
[[end conversation]]	Okay, well, I have to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6823630136986276, 0.68364726027397]
[[end conversation]]	I'm sorry, but I need to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.68364726027397, 0.6849315068493125]
[[end conversation]]	Well, I probably should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6849315068493125, 0.6913527397260248]
[[end conversation]]	Well, I have to run. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye	[0.6913527397260248, 0.6917808219178057]
[[end conversation]]	I'm sorry, but I have to get back to work. Yeah, bye...	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working	[0.6917808219178057, 0.6934931506849289]
[[end conversation]]	I should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6934931506849289, 0.6939212328767097]
[[end conversation]]	We need to get back to work.	Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.6939212328767097, 0.6952054794520521]
[[end conversation]]	I should probably get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.6952054794520521, 0.6956335616438329]
[[end conversation]]	Well, I should probably get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.6956335616438329, 0.6990582191780795]
[[end conversation]]	Okay, well, I need to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.6990582191780795, 0.6999143835616412]
[[end conversation]]	Okay, well, I have to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.6999143835616412, 0.7007705479452028]
[[end conversation]]	I think I should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.7007705479452028, 0.7011986301369836]
[[end conversation]]	I'm sorry, but I really have to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7011986301369836, 0.702482876712326]
[[end conversation]]	Okay, well, I should really get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.702482876712326, 0.7033390410958876]
[[end conversation]]	Sure. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.7033390410958876, 0.7037671232876684]
[[end conversation]]	Okay, well, I should probably get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7037671232876684, 0.7054794520547917]
[[end conversation]]	I really have to get back to work too! Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.7054794520547917, 0.7063356164383533]
[[end conversation]]	I'm sorry, but I really need to get back to work. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7063356164383533, 0.7140410958904081]
[[end conversation]]	I have to go anyway. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.7140410958904081, 0.7144691780821889]
[[end conversation]]	Well, I need to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7144691780821889, 0.7161815068493121]
[[end conversation]]	I'm sorry, but I probably should get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7161815068493121, 0.7196061643835587]
[[end conversation]]	I should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7196061643835587, 0.7200342465753395]
[[end conversation]]	Okay, well, I really should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.7200342465753395, 0.7208904109589012]
[[end conversation]]	Okay, well, I have to go. Nice to see you. Take care.	PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.7208904109589012, 0.7217465753424628]
[[end conversation]]	Well, I have to get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.7217465753424628, 0.7243150684931478]
[[end conversation]]	I should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.7243150684931478, 0.7247431506849286]
[[end conversation]]	We should get back to work.	Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7247431506849286, 0.7255993150684902]
[[end conversation]]	Okay, well, I probably should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7255993150684902, 0.7268835616438326]
[[end conversation]]	I think I should get back to work too! Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.7268835616438326, 0.73073630136986]
[[end conversation]]	I really need to get back to work too! Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.73073630136986, 0.7328767123287642]
[[end conversation]]	I'm going to grab another drink. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7328767123287642, 0.733304794520545]
[[end conversation]]	I think I should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.733304794520545, 0.7337328767123258]
[[end conversation]]	Well, I have to go. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye	[0.7337328767123258, 0.7341609589041066]
[[end conversation]]	I'm going to grab another drink. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7341609589041066, 0.7345890410958874]
[[end conversation]]	Well, I really should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7345890410958874, 0.7358732876712298]
[[end conversation]]	We think I probably should get back to work.	Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7358732876712298, 0.7371575342465723]
[[end conversation]]	I'm sorry, but I should get back to work. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7371575342465723, 0.7397260273972572]
[[end conversation]]	We have to get back to work.	Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7397260273972572, 0.7410102739725997]
[[end conversation]]	I'm sorry, but I should really get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7410102739725997, 0.7422945205479421]
[[end conversation]]	I'm sorry, but I think I should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7422945205479421, 0.7435787671232845]
[[end conversation]]	I really have to get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7435787671232845, 0.7444349315068461]
[[end conversation]]	We really need to get back to work.	Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7444349315068461, 0.7465753424657503]
[[end conversation]]	I'm sorry, but I have to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7465753424657503, 0.7482876712328735]
[[end conversation]]	Sure. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^PushObligation:goodbye	[0.7482876712328735, 0.749571917808216]
[[end conversation]]	I need to get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.749571917808216, 0.7499999999999968]
[[end conversation]]	Okay, well, I should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7499999999999968, 0.7508561643835584]
[[end conversation]]	Okay, well, I think I probably should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7508561643835584, 0.7525684931506816]
[[end conversation]]	I'm sorry, but I have to get back to work. Nice to see you. Bye.	ResolveObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7525684931506816, 0.7559931506849282]
[[end conversation]]	I should probably get back to work. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7559931506849282, 0.7572773972602707]
[[end conversation]]	I probably should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7572773972602707, 0.7607020547945172]
[[end conversation]]	I have to go anyway. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.7607020547945172, 0.7611301369862981]
[[end conversation]]	I should probably get back to work. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7611301369862981, 0.7628424657534213]
[[end conversation]]	Okay, well, I really have to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7628424657534213, 0.7645547945205445]
[[end conversation]]	I'm sorry, but I think I probably should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.7645547945205445, 0.765839041095887]
[[end conversation]]	I need to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.765839041095887, 0.7662671232876678]
[[end conversation]]	I should probably get back to work. Yeah, bye...	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7662671232876678, 0.7671232876712294]
[[end conversation]]	Okay, well, I think I probably should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7671232876712294, 0.7696917808219144]
[[end conversation]]	I probably should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7696917808219144, 0.7701198630136952]
[[end conversation]]	I probably should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.7701198630136952, 0.770547945205476]
[[end conversation]]	I need to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.770547945205476, 0.7709760273972568]
[[end conversation]]	I really need to get back to work too! Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.7709760273972568, 0.7718321917808184]
[[end conversation]]	We really should get back to work.	Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7718321917808184, 0.77268835616438]
[[end conversation]]	Well, I should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.77268835616438, 0.7739726027397225]
[[end conversation]]	I really have to get back to work too! Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.7739726027397225, 0.7761130136986266]
[[end conversation]]	I should get back to work. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7761130136986266, 0.7786815068493116]
[[end conversation]]	I should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7786815068493116, 0.7816780821917774]
[[end conversation]]	Well, I really should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7816780821917774, 0.7842465753424623]
[[end conversation]]	I should really get back to work too! Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.7842465753424623, 0.785102739726024]
[[end conversation]]	I have to run. Yeah, bye...	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4	[0.785102739726024, 0.7855308219178048]
[[end conversation]]	I really need to get back to work. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7855308219178048, 0.7889554794520514]
[[end conversation]]	I really have to get back to work. Yeah, bye...	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7889554794520514, 0.789811643835613]
[[end conversation]]	I really need to get back to work too! Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.789811643835613, 0.7910958904109554]
[[end conversation]]	I really have to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7910958904109554, 0.7923801369862978]
[[end conversation]]	Okay, well, I have to run. Nice to see you. Goodbye.	PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.7923801369862978, 0.7958047945205444]
[[end conversation]]	Well, I'm going to grab another drink. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7958047945205444, 0.7962328767123252]
[[end conversation]]	I have to get back to work. Nice to see you. Bye.	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^MiscFunctions:EndConversation	[0.7962328767123252, 0.7975171232876677]
[[end conversation]]	Well, I should really get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.7975171232876677, 0.8000856164383526]
[[end conversation]]	No problem! Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4	[0.8000856164383526, 0.8017979452054759]
[[end conversation]]	Okay, well, I really should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8017979452054759, 0.8026541095890375]
[[end conversation]]	Well, I really need to get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.8026541095890375, 0.8077910958904073]
[[end conversation]]	I think I should get back to work. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.8077910958904073, 0.8095034246575306]
[[end conversation]]	Okay, well, I should really get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.8095034246575306, 0.8099315068493114]
[[end conversation]]	I'm sorry, but I'm going to grab another drink. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4	[0.8099315068493114, 0.8103595890410922]
[[end conversation]]	I'm sorry, but I should really get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8103595890410922, 0.8129280821917771]
[[end conversation]]	Okay, well, I really should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8129280821917771, 0.8137842465753388]
[[end conversation]]	I should really get back to work too! Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.8137842465753388, 0.8159246575342429]
[[end conversation]]	I'm sorry, but I think I should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8159246575342429, 0.8172089041095854]
[[end conversation]]	I'm sorry, but I should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8172089041095854, 0.8184931506849278]
[[end conversation]]	I have to go. Nice to see you. Take care.	PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.8184931506849278, 0.8189212328767086]
[[end conversation]]	I should really get back to work. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.8189212328767086, 0.8210616438356128]
[[end conversation]]	I have to get back to work. Yeah, bye...	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.8210616438356128, 0.8219178082191744]
[[end conversation]]	I have to get back to work too! Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.8219178082191744, 0.8236301369862976]
[[end conversation]]	I really should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.8236301369862976, 0.8261986301369826]
[[end conversation]]	I really should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.8261986301369826, 0.8266267123287634]
[[end conversation]]	I need to get back to work too! Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.8266267123287634, 0.8279109589041058]
[[end conversation]]	I need to get back to work too! Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.8279109589041058, 0.8287671232876674]
[[end conversation]]	Well, I'm going to grab another drink. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.8287671232876674, 0.8291952054794482]
[[end conversation]]	I'm sorry, but I have to run. Nice to see you. Take care.	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.8291952054794482, 0.8296232876712291]
[[end conversation]]	I'm sorry, but I should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8296232876712291, 0.8309075342465715]
[[end conversation]]	Okay, well, I really have to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8309075342465715, 0.8317636986301331]
[[end conversation]]	I should really get back to work too! Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.8317636986301331, 0.8330479452054755]
[[end conversation]]	I probably should get back to work. Nice to see you. Bye.	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^MiscFunctions:EndConversation	[0.8330479452054755, 0.8347602739725988]
[[end conversation]]	Well, I have to go. Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.8347602739725988, 0.8356164383561604]
[[end conversation]]	Well, I should probably get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8356164383561604, 0.8407534246575302]
[[end conversation]]	Okay, well, I need to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8407534246575302, 0.8424657534246535]
[[end conversation]]	I really have to get back to work. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.8424657534246535, 0.8441780821917767]
[[end conversation]]	Well, I should really get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8441780821917767, 0.8454623287671191]
[[end conversation]]	I should probably get back to work too! Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.8454623287671191, 0.8467465753424616]
[[end conversation]]	Okay, well, I probably should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8467465753424616, 0.8476027397260232]
[[end conversation]]	Well, I should probably get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.8476027397260232, 0.8544520547945164]
[[end conversation]]	Well, I think I should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.8544520547945164, 0.8570205479452013]
[[end conversation]]	I think I should get back to work too! Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.8570205479452013, 0.8608732876712287]
[[end conversation]]	Okay, well, I should really get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8608732876712287, 0.8617294520547903]
[[end conversation]]	I should probably head out. Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.8617294520547903, 0.8630136986301328]
[[end conversation]]	I have to go. Nice to see you. See you later.	PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.8630136986301328, 0.8634417808219136]
[[end conversation]]	I really should get back to work too! Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.8634417808219136, 0.864726027397256]
[[end conversation]]	I think I probably should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.864726027397256, 0.8660102739725984]
[[end conversation]]	Well, I should really get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8660102739725984, 0.8672945205479409]
[[end conversation]]	I should probably get back to work too! Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.8672945205479409, 0.869434931506845]
[[end conversation]]	I really have to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.869434931506845, 0.8702910958904067]
[[end conversation]]	Well, I think I probably should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.8702910958904067, 0.8805650684931464]
[[end conversation]]	I'm sorry, but I should probably get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8805650684931464, 0.8818493150684888]
[[end conversation]]	I need to get back to work. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.8818493150684888, 0.8861301369862971]
[[end conversation]]	I have to get back to work. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.8861301369862971, 0.8878424657534203]
[[end conversation]]	Well, I probably should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8878424657534203, 0.8899828767123245]
[[end conversation]]	Well, I really need to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8899828767123245, 0.8976883561643793]
[[end conversation]]	I think I probably should get back to work too! Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.8976883561643793, 0.8989726027397217]
[[end conversation]]	I'm sorry, but I need to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.8989726027397217, 0.9002568493150641]
[[end conversation]]	Well, I think I should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^MiscFunctions:EndConversation	[0.9002568493150641, 0.9028253424657491]
[[end conversation]]	I'm sorry, but I should probably head out. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9028253424657491, 0.9032534246575299]
[[end conversation]]	Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.9032534246575299, 0.9049657534246531]
[[end conversation]]	I have to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9049657534246531, 0.9075342465753381]
[[end conversation]]	I have to go. Nice to see you. Goodbye.	PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9075342465753381, 0.9079623287671189]
[[end conversation]]	Well, I have to run. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye	[0.9079623287671189, 0.9083904109588997]
[[end conversation]]	Nice to see you. Bye.	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation	[0.9083904109588997, 0.9096746575342421]
[[end conversation]]	Okay, well, I should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9096746575342421, 0.9105308219178038]
[[end conversation]]	I have to go anyway. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'	[0.9105308219178038, 0.9113869863013654]
[[end conversation]]	I really need to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9113869863013654, 0.917380136986297]
[[end conversation]]	I have to get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.917380136986297, 0.9178082191780778]
[[end conversation]]	I should probably head out. Nice to see you. See you later.	PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9178082191780778, 0.9190924657534202]
[[end conversation]]	Nice to see you. Goodbye.	PushObligation:goodbye	[0.9190924657534202, 0.9203767123287626]
[[end conversation]]	I'm sorry, but I should really get back to work. Nice to see you. Take care.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9203767123287626, 0.921660958904105]
[[end conversation]]	I have to run. Nice to see you. Take care.	PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.921660958904105, 0.9220890410958859]
[[end conversation]]	Well, I think I should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9220890410958859, 0.9233732876712283]
[[end conversation]]	I really have to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9233732876712283, 0.9259417808219133]
[[end conversation]]	I need to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9259417808219133, 0.9263698630136941]
[[end conversation]]	Well, I really have to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9263698630136941, 0.9315068493150639]
[[end conversation]]	Nice to see you. Take care.	PushObligation:goodbye	[0.9315068493150639, 0.933647260273968]
[[end conversation]]	I'm sorry, but I really need to get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.933647260273968, 0.9374999999999954]
[[end conversation]]	Well, I should probably head out. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye	[0.9374999999999954, 0.9387842465753379]
[[end conversation]]	I really need to get back to work. Nice to see you. Bye.	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^MiscFunctions:EndConversation	[0.9387842465753379, 0.9417808219178037]
[[end conversation]]	I think I probably should get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9417808219178037, 0.9422089041095845]
[[end conversation]]	I really need to get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9422089041095845, 0.9434931506849269]
[[end conversation]]	Well, I have to go. Yeah, bye...	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4	[0.9434931506849269, 0.9443493150684885]
[[end conversation]]	I'm sorry, but I probably should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9443493150684885, 0.9460616438356118]
[[end conversation]]	I should probably get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9460616438356118, 0.9473458904109542]
[[end conversation]]	I think I should get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9473458904109542, 0.9486301369862966]
[[end conversation]]	Well, I think I should get back to work. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9486301369862966, 0.949914383561639]
[[end conversation]]	Okay, well, I should get back to work. Nice to see you. Bye.	PushObligation:goodbye^ResolveObligation:goodbye^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^MiscFunctions:EndConversation	[0.949914383561639, 0.9503424657534199]
[[end conversation]]	Well, I have to run. Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye	[0.9503424657534199, 0.9507705479452007]
[[end conversation]]	I'm sorry, but I have to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9507705479452007, 0.9524828767123239]
[[end conversation]]	I should really get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9524828767123239, 0.9529109589041047]
[[end conversation]]	I have to get back to work too! Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.9529109589041047, 0.9550513698630089]
[[end conversation]]	I have to get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9550513698630089, 0.9554794520547897]
[[end conversation]]	I really need to get back to work. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9554794520547897, 0.9597602739725979]
[[end conversation]]	I should probably head out. Nice to see you. Goodbye.	PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9597602739725979, 0.9610445205479403]
[[end conversation]]	I really should get back to work. Yeah, bye...	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9610445205479403, 0.9619006849315019]
[[end conversation]]	Well, I really need to get back to work. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.9619006849315019, 0.9721746575342417]
[[end conversation]]	I really should get back to work too! Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.9721746575342417, 0.9734589041095841]
[[end conversation]]	I really should get back to work. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9734589041095841, 0.9738869863013649]
[[end conversation]]	I'm sorry, but I have to go. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9738869863013649, 0.9743150684931458]
[[end conversation]]	Okay, well, I have to get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9743150684931458, 0.976027397260269]
[[end conversation]]	I really should get back to work. Nice to see you. Bye.	Preconditions:lambda speaker: speaker.routine.working^ResolveObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye^MiscFunctions:EndConversation	[0.976027397260269, 0.9773116438356114]
[[end conversation]]	I'm sorry, but I probably should get back to work. Nice to see you. See you later.	Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is not speaker^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9773116438356114, 0.9790239726027347]
[[end conversation]]	Well, I have to go. Nice to see you. Have a great [speaker.game.time_of_day].	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^PushObligation:goodbye	[0.9790239726027347, 0.9794520547945155]
[[end conversation]]	Well, I'm going to grab another drink. Great to see you! Have a wonderful [speaker.game.time_of_day]!	ResolveObligation:goodbye^PushObligation:goodbye^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9794520547945155, 0.9811643835616387]
[[end conversation]]	I should probably get back to work. Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9811643835616387, 0.9815924657534195]
[[end conversation]]	I really should get back to work. Nice to see you. Goodbye.	Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9815924657534195, 0.9833047945205428]
[[end conversation]]	Okay, well, I have to run. Nice to see you. See you later.	PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.9833047945205428, 0.9858732876712277]
[[end conversation]]	Well, I really have to get back to work. Yeah, bye...	ResolveObligation:goodbye^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^MiscFunctions:EndConversation^Preconditions:lambda speaker: speaker.routine.working^Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'	[0.9858732876712277, 0.9892979452054743]
[[end conversation]]	I should really get back to work too! Nice to see you. Goodbye.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.9892979452054743, 0.9910102739725976]
[[end conversation]]	I really need to get back to work. Nice to see you. See you later.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name != 'end conversation'^Preconditions:lambda speaker: speaker.routine.working^PushObligation:goodbye	[0.9910102739725976, 0.99229452054794]
[[end conversation]]	I think I should get back to work too! Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.99229452054794, 0.9961472602739674]
[[end conversation]]	Okay, well, I'm going to grab another drink. Nice to see you. See you later.	Preconditions:lambda speaker: speaker.location.type == 'business' and 'bar' in speaker.location.services and not speaker.routine.working^PushObligation:goodbye^Preconditions:lambda conversation, speaker: conversation.completed_turns[-1].speaker is speaker	[0.9961472602739674, 0.9987157534246524]
[[end conversation]]	I really need to get back to work too! Nice to see you. Take care.	Preconditions:lambda conversation: conversation.completed_turns[-1].line_of_dialogue.discourse_act.name == 'end conversation'^Preconditions:lambda conversation: 'back to work' in conversation.completed_turns[-1].realization^PushObligation:goodbye^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker, interlocutor: speaker.routine.working and interlocutor.routine.working	[0.9987157534246524, 0.9999999999999948]
[[tell]]	His name is [speaker.father.first_name].	PushObligation:acknowledge satisfactory answer^ResolveObligation:tell^Preconditions:lambda speaker: speaker.father is not None^ResolveObligation:tell(speaker.father.name)	[0, 0.11538461538461539]
[[tell]]	He's a [speaker.father.occupation.vocation].	Preconditions:lambda speaker: speaker.father and speaker.father.occupation and speaker.father.occupation.company is not speaker.location^ResolveObligation:tell	[0.11538461538461539, 0.15384615384615385]
[[tell]]	You wouldn't know my dad.	Preconditions:lambda speaker: speaker.father is None^PushObligation:acknowledge unsatisfactory answer^ResolveObligation:tell^ResolveObligation:tell(speaker.father.name)	[0.15384615384615385, 0.23076923076923078]
[[tell]]	My dad's name is [speaker.father.first_name].	PushObligation:acknowledge satisfactory answer^ResolveObligation:tell^Preconditions:lambda speaker: speaker.father is not None^ResolveObligation:tell(speaker.father.name)	[0.23076923076923078, 0.42307692307692313]
[[tell]]	[speaker.father.first_name], just like me.	Preconditions:lambda speaker: speaker.father and speaker.father.first_name == speaker.first_name^ResolveObligation:tell(speaker.father.name)^ResolveObligation:tell^PushObligation:acknowledge satisfactory answer	[0.42307692307692313, 0.46153846153846156]
[[tell]]	My father's name is [speaker.father.first_name].	PushObligation:acknowledge satisfactory answer^ResolveObligation:tell^Preconditions:lambda speaker: speaker.father is not None^ResolveObligation:tell(speaker.father.name)	[0.46153846153846156, 0.576923076923077]
[[tell]]	You wouldn't know my father.	Preconditions:lambda speaker: speaker.father is None^PushObligation:acknowledge unsatisfactory answer^ResolveObligation:tell^ResolveObligation:tell(speaker.father.name)	[0.576923076923077, 0.6153846153846154]
[[tell]]	You wouldn't know him.	Preconditions:lambda speaker: speaker.father is None^PushObligation:acknowledge unsatisfactory answer^ResolveObligation:tell^ResolveObligation:tell(speaker.father.name)	[0.6153846153846154, 0.6538461538461539]
[[tell]]	My dad's name is also [speaker.father.first_name].	ResolveObligation:tell(speaker.father.name)^Preconditions:lambda speaker: speaker.father and speaker.father.first_name == speaker.first_name^ResolveObligation:tell^PushObligation:acknowledge satisfactory answer	[0.6538461538461539, 0.7307692307692308]
[[tell]]	His name is also [speaker.father.first_name].	ResolveObligation:tell(speaker.father.name)^Preconditions:lambda speaker: speaker.father and speaker.father.first_name == speaker.first_name^ResolveObligation:tell^PushObligation:acknowledge satisfactory answer	[0.7307692307692308, 0.7692307692307693]
[[tell]]	It's [speaker.father.first_name]. I'm named after him.	PushObligation:acknowledge satisfactory answer^Preconditions:lambda speaker: speaker.father and speaker.father.first_name == speaker.first_name^ResolveObligation:tell^ResolveObligation:tell(speaker.father.name)	[0.7692307692307693, 0.8076923076923077]
[[tell]]	Not even worth talking about.	Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^PushObligation:acknowledge unsatisfactory answer^ResolveObligation:tell^ResolveObligation:tell(speaker.father.name)	[0.8076923076923077, 0.8461538461538461]
[[tell]]	My father's name is also [speaker.father.first_name].	ResolveObligation:tell(speaker.father.name)^Preconditions:lambda speaker: speaker.father and speaker.father.first_name == speaker.first_name^ResolveObligation:tell^PushObligation:acknowledge satisfactory answer	[0.8461538461538461, 0.8846153846153846]
[[tell]]	[speaker.father.first_name].	PushObligation:acknowledge satisfactory answer^ResolveObligation:tell^Preconditions:lambda speaker: speaker.father is not None^ResolveObligation:tell(speaker.father.name)	[0.8846153846153846, 1.0]
[[wh-question]]	I was wondering: What's your father's name?	PushObligation:tell(speaker.father.name)^PushObligation:tell^ChangeSubjectTo:interlocutor.father	[0, 0.5]
[[wh-question]]	I have a question. What's your father's name?	Preconditions:lambda speaker, interlocutor: (interlocutor not in speaker.friends or speaker.personality.agreeableness < -0.4) and random.random() < 0.5^PushObligation:request motivation^PushObligation:tell^ChangeSubjectTo:interlocutor.father	[0.5, 1.0]
[[small talk]]	I'm alright. How's it going?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0, 0.031007751937984496]
[[small talk]]	I'm well. And you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.031007751937984496, 0.03875968992248062]
[[small talk]]	Work's alright.	Moves:make small talk^ResolveObligation:small talk:how is work^Preconditions:lambda speaker: speaker.occupation is not None^AddressTopic:work	[0.03875968992248062, 0.046511627906976744]
[[small talk]]	I'm alright. How are you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.046511627906976744, 0.07751937984496124]
[[small talk]]	I'm fantastic. How about you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.07751937984496124, 0.09302325581395349]
[[small talk]]	I'm well. How are you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.09302325581395349, 0.12403100775193798]
[[small talk]]	I'm alright.	Moves:make small talk^ResolveObligation:small talk:how are you	[0.12403100775193798, 0.13178294573643412]
[[small talk]]	Work's great.	Moves:make small talk^ResolveObligation:small talk:how is work^Preconditions:lambda speaker: speaker.occupation is not None^AddressTopic:work	[0.13178294573643412, 0.14728682170542637]
[[small talk]]	Work's fantastic.	Moves:make small talk^ResolveObligation:small talk:how is work^Preconditions:lambda speaker: speaker.occupation is not None^AddressTopic:work	[0.14728682170542637, 0.15503875968992248]
[[small talk]]	Business has been fantastic!	Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^ResolveObligation:small talk:how is business^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker	[0.15503875968992248, 0.16279069767441862]
[[small talk]]	How's work?	Moves:make small talk^AddressTopic:work^Preconditions:lambda interlocutor: interlocutor.occupation is not None^PushTopic:work^PushObligation:small talk:how is work	[0.16279069767441862, 0.17054263565891475]
[[small talk]]	How's your company doing?	Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor^AddressTopic:work^PushObligation:small talk:how is business^PushTopic:work	[0.17054263565891475, 0.1782945736434109]
[[small talk]]	I'm great. And you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.1782945736434109, 0.19379844961240314]
[[small talk]]	Business has been fantastic.	Moves:make small talk^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:small talk:how is business^AddressTopic:work	[0.19379844961240314, 0.20155038759689925]
[[small talk]]	I'm good. How are you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.20155038759689925, 0.26356589147286824]
[[small talk]]	How's the company going?	Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor^AddressTopic:work^PushObligation:small talk:how is business^PushTopic:work	[0.26356589147286824, 0.2713178294573644]
[[small talk]]	I'm great. How about you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.2713178294573644, 0.28682170542635665]
[[small talk]]	I'm great. How are you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.28682170542635665, 0.31782945736434115]
[[small talk]]	I'm fantastic. How are you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.31782945736434115, 0.34883720930232565]
[[small talk]]	I'm well. How about you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.34883720930232565, 0.3643410852713179]
[[small talk]]	I'm well. How have you been?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.3643410852713179, 0.3875968992248063]
[[small talk]]	I'm great. How's it going?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.3875968992248063, 0.4186046511627908]
[[small talk]]	How has business been?	Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor^AddressTopic:work^PushObligation:small talk:how is business^PushTopic:work	[0.4186046511627908, 0.4263565891472869]
[[small talk]]	Work's good.	Moves:make small talk^ResolveObligation:small talk:how is work^Preconditions:lambda speaker: speaker.occupation is not None^AddressTopic:work	[0.4263565891472869, 0.43410852713178305]
[[small talk]]	I'm fantastic.	Moves:make small talk^ResolveObligation:small talk:how are you	[0.43410852713178305, 0.4418604651162792]
[[small talk]]	Business has been good.	Moves:make small talk^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:small talk:how is business^AddressTopic:work	[0.4418604651162792, 0.4496124031007753]
[[small talk]]	How's work to[speaker.game.time_of_day]?	Moves:make small talk^AddressTopic:work^PushObligation:small talk:how is work^Preconditions:lambda interlocutor: interlocutor.routine.working^PushTopic:work	[0.4496124031007753, 0.45736434108527146]
[[small talk]]	I'm alright. And you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.45736434108527146, 0.47286821705426374]
[[small talk]]	Business has been alright.	Moves:make small talk^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:small talk:how is business^AddressTopic:work	[0.47286821705426374, 0.4806201550387599]
[[small talk]]	I'm good.	Moves:make small talk^ResolveObligation:small talk:how are you	[0.4806201550387599, 0.5038759689922483]
[[small talk]]	I'm fantastic. How have you been?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.5038759689922483, 0.5271317829457367]
[[small talk]]	Business has been well!	Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^ResolveObligation:small talk:how is business^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker	[0.5271317829457367, 0.5348837209302328]
[[small talk]]	Business has been well.	Moves:make small talk^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:small talk:how is business^AddressTopic:work	[0.5348837209302328, 0.5503875968992251]
[[small talk]]	I'm fantastic. And you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.5503875968992251, 0.5581395348837213]
[[small talk]]	Work's well.	Moves:make small talk^ResolveObligation:small talk:how is work^Preconditions:lambda speaker: speaker.occupation is not None^AddressTopic:work	[0.5581395348837213, 0.5658914728682174]
[[small talk]]	Business has been alright!	Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^ResolveObligation:small talk:how is business^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker	[0.5658914728682174, 0.5736434108527135]
[[small talk]]	I'm alright. How have you been?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.5736434108527135, 0.596899224806202]
[[small talk]]	I'm alright. How about you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.596899224806202, 0.6124031007751942]
[[small talk]]	I'm good. How about you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.6124031007751942, 0.6511627906976748]
[[small talk]]	How's work going to[speaker.game.time_of_day]?	Moves:make small talk^AddressTopic:work^PushTopic:work^PushObligation:small talk:how is work^Preconditions:lambda interlocutor: interlocutor.routine.working	[0.6511627906976748, 0.6589147286821709]
[[small talk]]	I'm good. How's it going?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.6589147286821709, 0.7364341085271322]
[[small talk]]	I'm fantastic. How's it going?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.7364341085271322, 0.7674418604651168]
[[small talk]]	I'm good. How have you been?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.7674418604651168, 0.8217054263565896]
[[small talk]]	How's the business?	Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor^AddressTopic:work^PushObligation:small talk:how is business^PushTopic:work	[0.8217054263565896, 0.8372093023255819]
[[small talk]]	Business has been great!	Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^ResolveObligation:small talk:how is business^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker	[0.8372093023255819, 0.8527131782945742]
[[small talk]]	Business has been great.	Moves:make small talk^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:small talk:how is business^AddressTopic:work	[0.8527131782945742, 0.8604651162790703]
[[small talk]]	I'm good. And you?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.8604651162790703, 0.8682170542635664]
[[small talk]]	I'm well. How's it going?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.8682170542635664, 0.8992248062015509]
[[small talk]]	I'm well.	Moves:make small talk^ResolveObligation:small talk:how are you	[0.8992248062015509, 0.906976744186047]
[[small talk]]	How's it going?	Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.906976744186047, 0.9147286821705432]
[[small talk]]	How are you?	Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.9147286821705432, 0.9224806201550393]
[[small talk]]	I'm great.	Moves:make small talk^ResolveObligation:small talk:how are you	[0.9224806201550393, 0.9302325581395354]
[[small talk]]	How's business?	Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor^AddressTopic:work^PushObligation:small talk:how is business^PushTopic:work	[0.9302325581395354, 0.9379844961240316]
[[small talk]]	Business has been good!	Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^ResolveObligation:small talk:how is business^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker	[0.9379844961240316, 0.96124031007752]
[[small talk]]	How have you been?	Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.96124031007752, 0.9767441860465123]
[[small talk]]	I'm great. How have you been?	Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^PushObligation:small talk:how are you	[0.9767441860465123, 1.0000000000000007]
[[explain motivation]]	No reason, really, I was just curious.	ResolveObligation:explain motivation	[0, 0.25]
[[explain motivation]]	I was just wondering.	ResolveObligation:explain motivation	[0.25, 0.5]
[[explain motivation]]	Umm, I, uhh...	Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^ResolveObligation:explain motivation	[0.5, 1.0]
[[acknowledge satisfactory answer]]	Thanks!	ResolveObligation:acknowledge satisfactory answer^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0, 0.16666666666666666]
[[acknowledge satisfactory answer]]	Very good. Thanks.	ResolveObligation:acknowledge satisfactory answer	[0.16666666666666666, 0.3333333333333333]
[[acknowledge satisfactory answer]]	Got it, thanks.	ResolveObligation:acknowledge satisfactory answer	[0.3333333333333333, 0.5]
[[acknowledge satisfactory answer]]	Thank you.	ResolveObligation:acknowledge satisfactory answer	[0.5, 1.0]
[[acknowledge unsatisfactory answer]]	Thanks anyway.	Preconditions:lambda speaker: -0.4 <= speaker.personality.agreeableness <= 0.4^ResolveObligation:acknowledge unsatisfactory answer	[0, 0.041666666666666664]
[[acknowledge unsatisfactory answer]]	Go fuck yourself. Goodbye.	Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.041666666666666664, 0.08333333333333333]
[[acknowledge unsatisfactory answer]]	What's your problem?	Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.08333333333333333, 0.16666666666666666]
[[acknowledge unsatisfactory answer]]	What's your dang problem?	Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.16666666666666666, 0.22916666666666666]
[[acknowledge unsatisfactory answer]]	I understand.	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.22916666666666666, 0.25]
[[acknowledge unsatisfactory answer]]	What's your fucking problem?	Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.25, 0.3541666666666667]
[[acknowledge unsatisfactory answer]]	Are you serious?	Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.3541666666666667, 0.39583333333333337]
[[acknowledge unsatisfactory answer]]	I can't stand you!	Preconditions:lambda speaker, interlocutor: interlocutor not in speaker.friends^Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.39583333333333337, 0.43750000000000006]
[[acknowledge unsatisfactory answer]]	I really don't like you.	Preconditions:lambda speaker, interlocutor: interlocutor in speaker.relationships and speaker.relationships[interlocutor].charge < 0^Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.43750000000000006, 0.47916666666666674]
[[acknowledge unsatisfactory answer]]	I totally understand.	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.47916666666666674, 0.5208333333333334]
[[acknowledge unsatisfactory answer]]	No worries, thanks anyway!	Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.5208333333333334, 0.5416666666666667]
[[acknowledge unsatisfactory answer]]	What's your damn problem?	Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.5416666666666667, 0.6666666666666667]
[[acknowledge unsatisfactory answer]]	I totally understand!	Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.6666666666666667, 0.6875000000000001]
[[acknowledge unsatisfactory answer]]	Hmm, okay.	Preconditions:lambda speaker: -0.4 <= speaker.personality.agreeableness <= 0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.6875000000000001, 0.7083333333333335]
[[acknowledge unsatisfactory answer]]	Ah, sure, thanks anyway!	ResolveObligation:acknowledge unsatisfactory answer^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4	[0.7083333333333335, 0.7500000000000001]
[[acknowledge unsatisfactory answer]]	Hey, no worries!	ResolveObligation:acknowledge unsatisfactory answer^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4	[0.7500000000000001, 0.7708333333333335]
[[acknowledge unsatisfactory answer]]	I see.	Preconditions:lambda speaker: -0.4 <= speaker.personality.agreeableness <= 0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.7708333333333335, 0.7916666666666669]
[[acknowledge unsatisfactory answer]]	Okay.	Preconditions:lambda speaker: -0.4 <= speaker.personality.agreeableness <= 0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.7916666666666669, 0.8125000000000002]
[[acknowledge unsatisfactory answer]]	Hey, no worries.	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.8125000000000002, 0.8333333333333336]
[[acknowledge unsatisfactory answer]]	Why can't you respond like a normal human being?	Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.8333333333333336, 0.8958333333333336]
[[acknowledge unsatisfactory answer]]	Ah, okay.	Preconditions:lambda speaker: -0.4 <= speaker.personality.agreeableness <= 0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.8958333333333336, 0.916666666666667]
[[acknowledge unsatisfactory answer]]	What's your freaking problem?	Preconditions:lambda speaker: speaker.personality.agreeableness < -0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.916666666666667, 0.979166666666667]
[[acknowledge unsatisfactory answer]]	Ah, okay, don't worry about it.	Preconditions:lambda speaker: speaker.personality.agreeableness > 0.4^ResolveObligation:acknowledge unsatisfactory answer	[0.979166666666667, 1.0000000000000002]
[[greet]]	Hey. Business has been good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0, 0.0029476787030213707]
[[greet]]	Hey. Business has been good!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.0029476787030213707, 0.0058953574060427415]
[[greet]]	Greetings. I'm fantastic. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.0058953574060427415, 0.008843036109064112]
[[greet]]	Hey. Business has been good.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.008843036109064112, 0.01326455416359617]
[[greet]]	Hello!	ResolveObligation:greet^PushObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.01326455416359617, 0.014738393515106855]
[[greet]]	Hello. I'm fantastic. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.014738393515106855, 0.015475313190862199]
[[greet]]	Hey. Work's alright.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.015475313190862199, 0.022107590272660283]
[[greet]]	Hey. I'm alright. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.022107590272660283, 0.028002947678703025]
[[greet]]	Hi. I'm fantastic. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.028002947678703025, 0.028739867354458368]
[[greet]]	Greetings. I'm well. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.028739867354458368, 0.02947678703021371]
[[greet]]	Greetings. Work's great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.02947678703021371, 0.030950626381724397]
[[greet]]	Greetings. I'm good. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.030950626381724397, 0.033161385408990426]
[[greet]]	Hello. Business has been fantastic!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.033161385408990426, 0.03463522476050111]
[[greet]]	Greetings. I'm good. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.03463522476050111, 0.037582903463522485]
[[greet]]	Hi. How has business been?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.037582903463522485, 0.03905674281503317]
[[greet]]	Hey. I'm great. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.03905674281503317, 0.04347826086956523]
[[greet]]	Hey. I'm well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.04347826086956523, 0.04568901989683126]
[[greet]]	Hi. I'm well. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.04568901989683126, 0.0464259395725866]
[[greet]]	Hey. I'm great. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.0464259395725866, 0.04863669859985263]
[[greet]]	Hey. I'm alright. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.04863669859985263, 0.05084745762711866]
[[greet]]	Greetings. I'm fantastic. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.05084745762711866, 0.053795136330140034]
[[greet]]	Greetings. I'm well. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.053795136330140034, 0.05526897568165072]
[[greet]]	Greetings. I'm well. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.05526897568165072, 0.056742815033161406]
[[greet]]	Hello. I'm good. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.056742815033161406, 0.05747973470891675]
[[greet]]	Greetings. I'm great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.05747973470891675, 0.058953574060427436]
[[greet]]	Hello, [interlocutor.first_name]!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^ResolveObligation:greet^ResolveObligation:greet^PushObligation:greet^Preconditions:lambda speaker, interlocutor: speaker.knows(interlocutor, 'first name')	[0.058953574060427436, 0.05969049373618278]
[[greet]]	Greetings. Business has been fantastic!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.05969049373618278, 0.06042741341193812]
[[greet]]	Hey. How has business been?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.06042741341193812, 0.0633750921149595]
[[greet]]	Hello. I'm great. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.0633750921149595, 0.06411201179071484]
[[greet]]	Greetings. Business has been well!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.06411201179071484, 0.06484893146647018]
[[greet]]	Hello. I'm well. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.06484893146647018, 0.06632277081798087]
[[greet]]	Greetings. Business has been fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.06632277081798087, 0.06705969049373621]
[[greet]]	Hello, [interlocutor.first_name].	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda speaker, interlocutor: speaker.knows(interlocutor, 'first name')^ResolveObligation:greet^ResolveObligation:greet	[0.06705969049373621, 0.0685335298452469]
[[greet]]	Hi. How's the business?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.0685335298452469, 0.06927044952100224]
[[greet]]	Hey. Work's fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.06927044952100224, 0.0736919675755343]
[[greet]]	Hey. I'm great. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.0736919675755343, 0.07590272660280033]
[[greet]]	Hey. I'm great. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.07590272660280033, 0.0788504053058217]
[[greet]]	Greetings. I'm good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.0788504053058217, 0.07958732498157704]
[[greet]]	Greetings. Work's great.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.07958732498157704, 0.08179808400884307]
[[greet]]	Hi, [interlocutor.first_name]!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^ResolveObligation:greet^ResolveObligation:greet^PushObligation:greet^Preconditions:lambda speaker, interlocutor: speaker.knows(interlocutor, 'first name')	[0.08179808400884307, 0.08327192336035376]
[[greet]]	Hi. Work's great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.08327192336035376, 0.08474576271186444]
[[greet]]	Hi, [interlocutor.first_name].	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda speaker, interlocutor: speaker.knows(interlocutor, 'first name')^ResolveObligation:greet^ResolveObligation:greet	[0.08474576271186444, 0.08621960206337513]
[[greet]]	Hello. I'm well. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.08621960206337513, 0.08695652173913047]
[[greet]]	Greetings. How's work to[speaker.game.time_of_day]?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushTopic:work^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushObligation:small talk:how is work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.routine.working	[0.08695652173913047, 0.08769344141488582]
[[greet]]	Greetings. Business has been alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.08769344141488582, 0.08843036109064116]
[[greet]]	Hi. How are you?	ResolveObligation:greet^PushObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.08843036109064116, 0.09064112011790719]
[[greet]]	Hi. I'm great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.09064112011790719, 0.09211495946941788]
[[greet]]	Hello. Work's well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.09211495946941788, 0.09506263817243925]
[[greet]]	Greetings. Business has been alright!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.09506263817243925, 0.09653647752394993]
[[greet]]	Greetings. I'm fantastic. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.09653647752394993, 0.09874723655121596]
[[greet]]	Greetings. I'm good. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.09874723655121596, 0.100957995578482]
[[greet]]	Hey. How's your company doing?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.100957995578482, 0.10316875460574802]
[[greet]]	Hey. I'm well. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.10316875460574802, 0.10537951363301405]
[[greet]]	Greetings. I'm alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.10537951363301405, 0.1061164333087694]
[[greet]]	Hello. I'm fantastic. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.1061164333087694, 0.10759027266028008]
[[greet]]	Greetings. I'm fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.10759027266028008, 0.10832719233603542]
[[greet]]	Hey. How's business?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.10832719233603542, 0.11274871039056748]
[[greet]]	Hello. Work's alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.11274871039056748, 0.11717022844509954]
[[greet]]	Hey. I'm alright. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.11717022844509954, 0.1215917464996316]
[[greet]]	Hey. How's the business?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.1215917464996316, 0.12380250552689763]
[[greet]]	Greetings. How are you?	ResolveObligation:greet^PushObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.12380250552689763, 0.12601326455416365]
[[greet]]	Hey. I'm great. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.12601326455416365, 0.1304347826086957]
[[greet]]	Hey. I'm well. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.1304347826086957, 0.13338246131171708]
[[greet]]	Hey. I'm good. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.13338246131171708, 0.13780397936624914]
[[greet]]	Hey. I'm alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.13780397936624914, 0.14001473839351516]
[[greet]]	Greetings. How's work?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how is work^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.occupation is not None^PushTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^AddressTopic:work	[0.14001473839351516, 0.14148857774502585]
[[greet]]	Hi. Business has been good!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.14148857774502585, 0.14296241709653654]
[[greet]]	Hi. Business has been good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.14296241709653654, 0.14443625644804722]
[[greet]]	Hi. I'm fantastic. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.14443625644804722, 0.1459100957995579]
[[greet]]	Hi. I'm fantastic. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.1459100957995579, 0.14664701547531325]
[[greet]]	Hi. I'm alright. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.14664701547531325, 0.14812085482682394]
[[greet]]	Hey. I'm good. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.14812085482682394, 0.152542372881356]
[[greet]]	Greetings. Business has been great!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.152542372881356, 0.15327929255711134]
[[greet]]	Hello. Business has been fantastic.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.15327929255711134, 0.15475313190862203]
[[greet]]	Hey. Business has been alright!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.15475313190862203, 0.1562269712601327]
[[greet]]	Hey. Business has been great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.1562269712601327, 0.1577008106116434]
[[greet]]	Greetings. Business has been great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.1577008106116434, 0.15843773028739874]
[[greet]]	Greetings. I'm well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.15843773028739874, 0.15917464996315409]
[[greet]]	Greetings. I'm good. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.15917464996315409, 0.15991156963890943]
[[greet]]	Hello. Business has been fantastic!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.15991156963890943, 0.16064848931466477]
[[greet]]	Hello. Business has been alright!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.16064848931466477, 0.16212232866617546]
[[greet]]	Greetings. I'm good. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.16212232866617546, 0.16507000736919683]
[[greet]]	Hi. I'm fantastic. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.16507000736919683, 0.16654384672070752]
[[greet]]	Hello. Work's alright.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.16654384672070752, 0.16875460574797355]
[[greet]]	Hi. How has business been?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.16875460574797355, 0.1694915254237289]
[[greet]]	Hi. Work's alright.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.1694915254237289, 0.17170228445099492]
[[greet]]	Hey. How's work to[speaker.game.time_of_day]?	ResolveObligation:greet^PushTopic:work^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^PushObligation:small talk:how is work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.routine.working	[0.17170228445099492, 0.17391304347826095]
[[greet]]	Greetings. How's work to[speaker.game.time_of_day]?	ResolveObligation:greet^PushTopic:work^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^PushObligation:small talk:how is work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.routine.working	[0.17391304347826095, 0.1746499631540163]
[[greet]]	Hello. Business has been alright.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.1746499631540163, 0.17538688282977163]
[[greet]]	Greetings. How's work going to[speaker.game.time_of_day]?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how is work^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.routine.working^PushTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^AddressTopic:work	[0.17538688282977163, 0.17612380250552698]
[[greet]]	Hi. How have you been?	ResolveObligation:greet^PushObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.17612380250552698, 0.178334561532793]
[[greet]]	Hey. How's it going?	ResolveObligation:greet^PushObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.178334561532793, 0.18275607958732507]
[[greet]]	Hello. I'm well. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.18275607958732507, 0.18570375829034644]
[[greet]]	Hey. Business has been great!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.18570375829034644, 0.18791451731761247]
[[greet]]	Hello. How's the company going?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.18791451731761247, 0.18938835666912315]
[[greet]]	Hey. I'm great. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.18938835666912315, 0.19159911569638918]
[[greet]]	Hey. I'm fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.19159911569638918, 0.19307295504789987]
[[greet]]	Hey. How's the company going?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.19307295504789987, 0.19454679439941056]
[[greet]]	Hello. Work's great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.19454679439941056, 0.19749447310243193]
[[greet]]	Hey. Work's great.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.19749447310243193, 0.20412675018423002]
[[greet]]	Greetings. I'm good. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.20412675018423002, 0.20633750921149605]
[[greet]]	Hey. I'm well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.20633750921149605, 0.20781134856300673]
[[greet]]	Hi. Business has been well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.20781134856300673, 0.20854826823876207]
[[greet]]	Greetings. I'm great. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.20854826823876207, 0.20928518791451742]
[[greet]]	Hi. How's work?	ResolveObligation:greet^PushObligation:small talk:how is work^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.occupation is not None^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work	[0.20928518791451742, 0.2122328666175388]
[[greet]]	Greetings. Business has been alright!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.2122328666175388, 0.21296978629329413]
[[greet]]	Greetings. Work's alright.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.21296978629329413, 0.21518054532056016]
[[greet]]	Hey. I'm good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.21518054532056016, 0.21665438467207085]
[[greet]]	Uh, Greetings...	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:greet	[0.21665438467207085, 0.21812822402358154]
[[greet]]	Hello. I'm fantastic. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.21812822402358154, 0.21960206337509222]
[[greet]]	Hey. How's the company going?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.21960206337509222, 0.22402358142962428]
[[greet]]	Hey. I'm fantastic. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.22402358142962428, 0.22844509948415634]
[[greet]]	Hi. I'm good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.22844509948415634, 0.23065585851142237]
[[greet]]	Hi. I'm well. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.23065585851142237, 0.2328666175386884]
[[greet]]	Hello. Work's great.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.2328666175386884, 0.23507737656595443]
[[greet]]	Hey. I'm great. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.23507737656595443, 0.2365512159174651]
[[greet]]	Hi. I'm alright. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.2365512159174651, 0.23876197494473114]
[[greet]]	Greetings. I'm great. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.23876197494473114, 0.23949889462048649]
[[greet]]	Hello. How have you been?	ResolveObligation:greet^PushObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.23949889462048649, 0.24170965364775251]
[[greet]]	Hey. How's work going to[speaker.game.time_of_day]?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how is work^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.routine.working^PushTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^AddressTopic:work	[0.24170965364775251, 0.2431834929992632]
[[greet]]	Hello. I'm fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.2431834929992632, 0.2446573323507739]
[[greet]]	Greetings. How has business been?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.2446573323507739, 0.24613117170228457]
[[greet]]	Greetings. I'm well. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.24613117170228457, 0.2483419307295506]
[[greet]]	Greetings. I'm alright. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.2483419307295506, 0.2498157700810613]
[[greet]]	Hello. How's business?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.2498157700810613, 0.25128960943257195]
[[greet]]	Hey. I'm fantastic. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.25128960943257195, 0.2571849668386147]
[[greet]]	Hey. I'm good. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.2571849668386147, 0.26160648489314675]
[[greet]]	Hi...	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushObligation:greet	[0.26160648489314675, 0.26308032424465744]
[[greet]]	Hi. I'm alright. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.26308032424465744, 0.2638172439204128]
[[greet]]	Greetings. Work's good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.2638172439204128, 0.26676492262343415]
[[greet]]	Hi. Business has been well!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.26676492262343415, 0.2675018422991895]
[[greet]]	Hi. I'm alright. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.2675018422991895, 0.27044952100221087]
[[greet]]	Hello. How's work?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how is work^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.occupation is not None^PushTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^AddressTopic:work	[0.27044952100221087, 0.27339719970523224]
[[greet]]	Greetings. I'm fantastic. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.27339719970523224, 0.2748710390567429]
[[greet]]	Greetings. How's the company going?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.2748710390567429, 0.27560795873249827]
[[greet]]	Hi. I'm alright. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.27560795873249827, 0.2763448784082536]
[[greet]]	Hello. I'm well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.2763448784082536, 0.2778187177597643]
[[greet]]	Hello. I'm alright. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.2778187177597643, 0.27855563743551964]
[[greet]]	Hey...	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushObligation:greet	[0.27855563743551964, 0.28002947678703033]
[[greet]]	Hey. I'm great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.28002947678703033, 0.2829771554900517]
[[greet]]	Greetings. Work's fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.2829771554900517, 0.28518791451731773]
[[greet]]	Greetings. How's business?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.28518791451731773, 0.2866617538688284]
[[greet]]	Hello. How's your company doing?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.2866617538688284, 0.28739867354458376]
[[greet]]	Hey. I'm good. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.28739867354458376, 0.29403095062638185]
[[greet]]	Greetings. I'm great. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.29403095062638185, 0.29550478997789253]
[[greet]]	Hey. How's work?	ResolveObligation:greet^PushObligation:small talk:how is work^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.occupation is not None^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work	[0.29550478997789253, 0.30434782608695665]
[[greet]]	Greetings. Business has been good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.30434782608695665, 0.30582166543846734]
[[greet]]	Greetings. Business has been good!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.30582166543846734, 0.307295504789978]
[[greet]]	Hi!	ResolveObligation:greet^PushObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.307295504789978, 0.31098010316875474]
[[greet]]	Hey. Work's good.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.31098010316875474, 0.3220338983050849]
[[greet]]	Hi. I'm great. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.3220338983050849, 0.3235077376565956]
[[greet]]	Hi. I'm fantastic. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.3235077376565956, 0.32645541635961695]
[[greet]]	Hi.	PushObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')	[0.32645541635961695, 0.32792925571112763]
[[greet]]	Hi. I'm good. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.32792925571112763, 0.33014001473839366]
[[greet]]	Hello. I'm great. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.33014001473839366, 0.33308769344141503]
[[greet]]	Greetings. I'm well. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.33308769344141503, 0.3338246131171704]
[[greet]]	Greetings. How's your company doing?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.3338246131171704, 0.3345615327929257]
[[greet]]	Hi. Work's fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.3345615327929257, 0.33677229182019175]
[[greet]]	Hey. I'm alright. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.33677229182019175, 0.3389830508474578]
[[greet]]	Hello. I'm alright. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.3389830508474578, 0.34193072955047915]
[[greet]]	Hey. Business has been alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.34193072955047915, 0.34340456890198984]
[[greet]]	Hi. I'm good. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.34340456890198984, 0.3463522476050112]
[[greet]]	Hello.	PushObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')	[0.3463522476050112, 0.34708916728076655]
[[greet]]	Hi. I'm alright. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.34708916728076655, 0.34856300663227724]
[[greet]]	Hey, [interlocutor.first_name].	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda speaker, interlocutor: speaker.knows(interlocutor, 'first name')^ResolveObligation:greet^ResolveObligation:greet	[0.34856300663227724, 0.3515106853352986]
[[greet]]	Greetings. Business has been fantastic!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.3515106853352986, 0.35224760501105395]
[[greet]]	Hi. I'm alright. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.35224760501105395, 0.3529845246868093]
[[greet]]	Hey, [interlocutor.first_name]!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^ResolveObligation:greet^ResolveObligation:greet^PushObligation:greet^Preconditions:lambda speaker, interlocutor: speaker.knows(interlocutor, 'first name')	[0.3529845246868093, 0.35372144436256464]
[[greet]]	Hey. How has business been?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.35372144436256464, 0.35593220338983067]
[[greet]]	Hello!	Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')	[0.35593220338983067, 0.356669123065586]
[[greet]]	Greetings. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.356669123065586, 0.35740604274134136]
[[greet]]	Hi. I'm well. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.35740604274134136, 0.35887988209285204]
[[greet]]	Hi. How's work going to[speaker.game.time_of_day]?	ResolveObligation:greet^PushObligation:small talk:how is work^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.routine.working^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work	[0.35887988209285204, 0.3596168017686074]
[[greet]]	Hi. Business has been well.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.3596168017686074, 0.36035372144436273]
[[greet]]	Greetings. I'm alright. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.36035372144436273, 0.36109064112011807]
[[greet]]	Hello. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.36109064112011807, 0.36256448047162876]
[[greet]]	Hi. Business has been alright.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.36256448047162876, 0.3633014001473841]
[[greet]]	Hello. Business has been alright!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.3633014001473841, 0.3647752394988948]
[[greet]]	Hello. Business has been good!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.3647752394988948, 0.3662490788504055]
[[greet]]	Hey. How's your company doing?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.3662490788504055, 0.36772291820191616]
[[greet]]	Hey. How's business?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.36772291820191616, 0.36919675755342685]
[[greet]]	Hi. Business has been alright!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.36919675755342685, 0.37067059690493753]
[[greet]]	Hi. I'm alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.37067059690493753, 0.3714075165806929]
[[greet]]	Hi. I'm fantastic. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.3714075165806929, 0.3736182756079589]
[[greet]]	Hey. Business has been fantastic!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.3736182756079589, 0.37582903463522493]
[[greet]]	Greetings. Work's alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.37582903463522493, 0.37803979366249096]
[[greet]]	Hey. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.37803979366249096, 0.37951363301400165]
[[greet]]	Hey. Business has been good!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.37951363301400165, 0.3839351510685337]
[[greet]]	Hey. I'm fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.3839351510685337, 0.38835666912306577]
[[greet]]	Greetings. Business has been fantastic.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.38835666912306577, 0.38983050847457645]
[[greet]]	Hi. How's work to[speaker.game.time_of_day]?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushTopic:work^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushObligation:small talk:how is work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.routine.working	[0.38983050847457645, 0.3905674281503318]
[[greet]]	Hey. Business has been fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.3905674281503318, 0.3920412675018425]
[[greet]]	Hi. Business has been great.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.3920412675018425, 0.3927781871775978]
[[greet]]	Greetings. How's the company going?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.3927781871775978, 0.3942520265291085]
[[greet]]	Hello. I'm fantastic. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.3942520265291085, 0.39867354458364057]
[[greet]]	Hey. I'm fantastic. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.39867354458364057, 0.40309506263817263]
[[greet]]	Hi. I'm great. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.40309506263817263, 0.40677966101694935]
[[greet]]	Greetings. I'm well. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.40677966101694935, 0.4075165806927047]
[[greet]]	Hello. I'm alright. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.4075165806927047, 0.40825350036846003]
[[greet]]	Hello. How's it going?	ResolveObligation:greet^PushObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.40825350036846003, 0.4097273397199707]
[[greet]]	Hey. Business has been fantastic!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.4097273397199707, 0.4112011790714814]
[[greet]]	Hey. I'm fantastic. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.4112011790714814, 0.41562269712601346]
[[greet]]	Hey. Business has been fantastic.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.41562269712601346, 0.4200442151805455]
[[greet]]	Hello. Business has been well!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.4200442151805455, 0.4215180545320562]
[[greet]]	Hey. Business has been well.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.4215180545320562, 0.42372881355932224]
[[greet]]	Hey. Business has been well!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.42372881355932224, 0.4252026529108329]
[[greet]]	Hello. Business has been well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.4252026529108329, 0.4266764922623436]
[[greet]]	Greetings. I'm great. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.4266764922623436, 0.42888725128960964]
[[greet]]	Hello. Business has been well!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.42888725128960964, 0.429624170965365]
[[greet]]	Greetings...	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushObligation:greet	[0.429624170965365, 0.4303610906411203]
[[greet]]	Hey. Work's good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.4303610906411203, 0.43625644804716307]
[[greet]]	Hey. Business has been well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.43625644804716307, 0.43773028739867376]
[[greet]]	Hey. Business has been well!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.43773028739867376, 0.4399410464259398]
[[greet]]	Hello. Business has been well.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.4399410464259398, 0.44067796610169513]
[[greet]]	Hello. I'm good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.44067796610169513, 0.44288872512896116]
[[greet]]	Greetings. I'm good. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.44288872512896116, 0.4450994841562272]
[[greet]]	Greetings. How have you been?	ResolveObligation:greet^PushObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.4450994841562272, 0.4473102431834932]
[[greet]]	Hi. How's the business?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.4473102431834932, 0.44804716285924856]
[[greet]]	Greetings. I'm well. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.44804716285924856, 0.4487840825350039]
[[greet]]	Hey. I'm well. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.4487840825350039, 0.4517317612380253]
[[greet]]	Hi. I'm well. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.4517317612380253, 0.45320560058953596]
[[greet]]	Hello. How's work going to[speaker.game.time_of_day]?	ResolveObligation:greet^PushObligation:small talk:how is work^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.routine.working^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work	[0.45320560058953596, 0.4539425202652913]
[[greet]]	Hello. Business has been great!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.4539425202652913, 0.45467943994104665]
[[greet]]	Hi. I'm good. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.45467943994104665, 0.4568901989683127]
[[greet]]	Uh, Hi...	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:greet	[0.4568901989683127, 0.45983787767133405]
[[greet]]	Greetings. How's your company doing?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.45983787767133405, 0.4605747973470894]
[[greet]]	Hello. Business has been great.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.4605747973470894, 0.46131171702284474]
[[greet]]	Hey. How have you been?	ResolveObligation:greet^PushObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.46131171702284474, 0.4679439941046428]
[[greet]]	Hi. Business has been fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.4679439941046428, 0.46868091378039817]
[[greet]]	Hi. How's your company doing?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.46868091378039817, 0.4694178334561535]
[[greet]]	Hey. How are you?	ResolveObligation:greet^PushObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.4694178334561535, 0.4760501105379516]
[[greet]]	Hello. I'm great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.4760501105379516, 0.47678703021370694]
[[greet]]	Hey. I'm good. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.47678703021370694, 0.481208548268239]
[[greet]]	Hi. Business has been fantastic!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.481208548268239, 0.48194546794399434]
[[greet]]	Greetings. I'm great. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.48194546794399434, 0.4841562269712604]
[[greet]]	Hi. How's the company going?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.4841562269712604, 0.48563006632277106]
[[greet]]	Hello. I'm great. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.48563006632277106, 0.48710390567428175]
[[greet]]	Hi. Business has been great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.48710390567428175, 0.4878408253500371]
[[greet]]	Hey. I'm fantastic. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.4878408253500371, 0.4893146647015478]
[[greet]]	Hello. I'm alright. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.4893146647015478, 0.4900515843773031]
[[greet]]	Hello. How has business been?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.4900515843773031, 0.4929992630803245]
[[greet]]	Hi. I'm well. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.4929992630803245, 0.49373618275607983]
[[greet]]	Greetings. I'm alright. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.49373618275607983, 0.4952100221075905]
[[greet]]	Hi. Business has been great!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.4952100221075905, 0.4966838614591012]
[[greet]]	Hi. I'm fantastic. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.4966838614591012, 0.4981577008106119]
[[greet]]	Hi. Business has been well!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.4981577008106119, 0.49889462048636724]
[[greet]]	Hello. How are you?	ResolveObligation:greet^PushObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.49889462048636724, 0.5011053795136332]
[[greet]]	Hey. Work's well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.5011053795136332, 0.5040530582166546]
[[greet]]	Hello. How has business been?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.5040530582166546, 0.5047899778924099]
[[greet]]	Hey. I'm good. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.5047899778924099, 0.513633014001474]
[[greet]]	Hey. I'm alright. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.513633014001474, 0.518054532056006]
[[greet]]	Greetings. I'm fantastic. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.518054532056006, 0.5187914517317613]
[[greet]]	Hi. Work's well.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.5187914517317613, 0.5217391304347827]
[[greet]]	Greetings. Business has been good.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.5217391304347827, 0.5232129697862934]
[[greet]]	Hey. I'm fantastic. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.5232129697862934, 0.5261606484893148]
[[greet]]	Greetings. Work's well.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.5261606484893148, 0.5291083271923361]
[[greet]]	Hi. I'm great. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.5291083271923361, 0.5313190862196021]
[[greet]]	Hello. I'm good. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.5313190862196021, 0.5372144436256449]
[[greet]]	Hello. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.5372144436256449, 0.5386882829771555]
[[greet]]	Hello. I'm good. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.5386882829771555, 0.5431098010316876]
[[greet]]	Hello. Work's good.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.5431098010316876, 0.5467943994104643]
[[greet]]	Greetings. I'm alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.5467943994104643, 0.548268238761975]
[[greet]]	Hey. I'm well. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.548268238761975, 0.5504789977892409]
[[greet]]	Hi. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.5504789977892409, 0.5512159174649962]
[[greet]]	Hey. I'm good. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.5512159174649962, 0.5556374355195283]
[[greet]]	Hey. How's work to[speaker.game.time_of_day]?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushTopic:work^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushObligation:small talk:how is work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.routine.working	[0.5556374355195283, 0.557111274871039]
[[greet]]	Hi. How's the company going?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.557111274871039, 0.5578481945467942]
[[greet]]	Hello. I'm well. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.5578481945467942, 0.5585851142225495]
[[greet]]	Greetings. I'm good. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.5585851142225495, 0.5600589535740602]
[[greet]]	Hi. Work's great.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.5600589535740602, 0.5622697126013262]
[[greet]]	Hi. I'm alright. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.5622697126013262, 0.5637435519528369]
[[greet]]	Greetings. How has business been?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.5637435519528369, 0.5644804716285922]
[[greet]]	Hello. I'm good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.5644804716285922, 0.5659543109801028]
[[greet]]	Greetings. Work's good.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.5659543109801028, 0.5696389093588795]
[[greet]]	Greetings. How's business?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.5696389093588795, 0.5703758290346348]
[[greet]]	Greetings. I'm great. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.5703758290346348, 0.5740604274134115]
[[greet]]	Hello. I'm great. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.5740604274134115, 0.5747973470891667]
[[greet]]	Hi. Work's fantastic.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.5747973470891667, 0.5784819454679434]
[[greet]]	Greetings. I'm alright. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.5784819454679434, 0.5792188651436987]
[[greet]]	Hi. Business has been alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.5792188651436987, 0.579955784819454]
[[greet]]	Hello. Business has been good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.579955784819454, 0.5829034635224754]
[[greet]]	Hello. Business has been alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.5829034635224754, 0.584377302873986]
[[greet]]	Hi. Business has been alright!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.584377302873986, 0.5851142225497413]
[[greet]]	Hi. I'm good. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.5851142225497413, 0.5873249815770073]
[[greet]]	Hello. How's business?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.5873249815770073, 0.588798820928518]
[[greet]]	Greetings. Business has been alright.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.588798820928518, 0.5895357406042733]
[[greet]]	Hey. I'm fantastic. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.5895357406042733, 0.5939572586588053]
[[greet]]	Hey. I'm fantastic. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.5939572586588053, 0.6028002947678694]
[[greet]]	Hello. I'm well. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.6028002947678694, 0.6042741341193801]
[[greet]]	Hello. How's work going to[speaker.game.time_of_day]?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how is work^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.routine.working^PushTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^AddressTopic:work	[0.6042741341193801, 0.6057479734708908]
[[greet]]	Hey. I'm good. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.6057479734708908, 0.6079587324981568]
[[greet]]	Greetings. I'm fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.6079587324981568, 0.6094325718496675]
[[greet]]	Greetings. I'm well. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.6094325718496675, 0.6109064112011782]
[[greet]]	Hi. I'm great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.6109064112011782, 0.6116433308769335]
[[greet]]	Hello. Work's well.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.6116433308769335, 0.6145910095799548]
[[greet]]	Hey. I'm well. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.6145910095799548, 0.6168017686072208]
[[greet]]	Hello. I'm alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.6168017686072208, 0.6197494473102422]
[[greet]]	Hi. I'm well. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.6197494473102422, 0.6212232866617529]
[[greet]]	Greetings.	PushObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')	[0.6212232866617529, 0.6219602063375081]
[[greet]]	Hi. I'm well. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.6219602063375081, 0.6234340456890188]
[[greet]]	Hey. I'm well. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.6234340456890188, 0.6256448047162848]
[[greet]]	Greetings!	Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')	[0.6256448047162848, 0.6263817243920401]
[[greet]]	Greetings. I'm alright. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.6263817243920401, 0.6278555637435508]
[[greet]]	Greetings. I'm alright. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.6278555637435508, 0.6300663227708168]
[[greet]]	Hello. How's the business?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.6300663227708168, 0.6315401621223274]
[[greet]]	Hey. I'm great. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.6315401621223274, 0.6389093588798809]
[[greet]]	Greetings. How's the business?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.6389093588798809, 0.6396462785556362]
[[greet]]	Hey. Work's well.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.6396462785556362, 0.6484893146647003]
[[greet]]	Hello. Work's fantastic.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.6484893146647003, 0.6521739130434769]
[[greet]]	Hello. Business has been great!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.6521739130434769, 0.6551215917464983]
[[greet]]	Greetings. I'm fantastic. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.6551215917464983, 0.656595431098009]
[[greet]]	Hi. I'm good. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.656595431098009, 0.658806190125275]
[[greet]]	Hi. I'm alright. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.658806190125275, 0.6602800294767857]
[[greet]]	Hey. I'm alright. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.6602800294767857, 0.663227708179807]
[[greet]]	Hello. How's work?	ResolveObligation:greet^PushObligation:small talk:how is work^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.occupation is not None^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work	[0.663227708179807, 0.6661753868828284]
[[greet]]	Hi. How's business?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.6661753868828284, 0.6669123065585837]
[[greet]]	Hello. Business has been good.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.6669123065585837, 0.6683861459100944]
[[greet]]	Hello. How's work to[speaker.game.time_of_day]?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushTopic:work^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushObligation:small talk:how is work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.routine.working	[0.6683861459100944, 0.6698599852616051]
[[greet]]	Greetings. I'm fantastic. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.6698599852616051, 0.672070744288871]
[[greet]]	Hey. I'm well. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.672070744288871, 0.6750184229918924]
[[greet]]	Hello. I'm good. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.6750184229918924, 0.6772291820191584]
[[greet]]	Greetings. I'm good. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.6772291820191584, 0.6794399410464244]
[[greet]]	Hello. I'm alright. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.6794399410464244, 0.680913780397935]
[[greet]]	Hi. I'm well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.680913780397935, 0.6816507000736903]
[[greet]]	Hello. Business has been good!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.6816507000736903, 0.6845983787767117]
[[greet]]	Greetings!	ResolveObligation:greet^PushObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.6845983787767117, 0.6860722181282224]
[[greet]]	Greetings. I'm alright. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.6860722181282224, 0.6868091378039777]
[[greet]]	Greetings. I'm alright. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.6868091378039777, 0.689756816506999]
[[greet]]	Hello. Business has been great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.689756816506999, 0.6912306558585097]
[[greet]]	Hello. I'm fantastic. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.6912306558585097, 0.6927044952100204]
[[greet]]	Hey. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.6927044952100204, 0.6941783345615311]
[[greet]]	Hey. Work's alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.6941783345615311, 0.6985998526160632]
[[greet]]	Greetings. I'm well. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.6985998526160632, 0.7000736919675739]
[[greet]]	Hi. Business has been fantastic.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.7000736919675739, 0.7015475313190845]
[[greet]]	Hey. I'm alright. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.7015475313190845, 0.7030213706705952]
[[greet]]	Greetings. I'm well. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.7030213706705952, 0.7037582903463505]
[[greet]]	Greetings. I'm great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.7037582903463505, 0.7044952100221058]
[[greet]]	Hello. I'm well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.7044952100221058, 0.7052321296978611]
[[greet]]	Greetings. I'm alright. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.7052321296978611, 0.7067059690493718]
[[greet]]	Hi. How's your company doing?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.7067059690493718, 0.7074428887251271]
[[greet]]	Hey. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.7074428887251271, 0.7089167280766377]
[[greet]]	Greetings. Business has been well.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.7089167280766377, 0.709653647752393]
[[greet]]	Greetings. How's work?	ResolveObligation:greet^PushObligation:small talk:how is work^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.occupation is not None^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work	[0.709653647752393, 0.7126013264554144]
[[greet]]	Hello. How's the business?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.7126013264554144, 0.7133382461311697]
[[greet]]	Hello. I'm great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.7133382461311697, 0.7162859248341911]
[[greet]]	Greetings. Business has been well!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.7162859248341911, 0.7170228445099464]
[[greet]]	Hey. I'm good. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.7170228445099464, 0.7214443625644784]
[[greet]]	Hi. Work's alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.7214443625644784, 0.7236551215917444]
[[greet]]	Hey. I'm well. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.7236551215917444, 0.7280766396462764]
[[greet]]	Greetings. How's work going to[speaker.game.time_of_day]?	ResolveObligation:greet^PushObligation:small talk:how is work^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.routine.working^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work	[0.7280766396462764, 0.7288135593220317]
[[greet]]	Hello. How's the company going?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.7288135593220317, 0.7302873986735424]
[[greet]]	Hey. Work's great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.7302873986735424, 0.7332350773765638]
[[greet]]	Greetings. I'm great. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.7332350773765638, 0.7339719970523191]
[[greet]]	Hi. Work's good.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.7339719970523191, 0.7376565954310957]
[[greet]]	Hi. I'm great. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.7376565954310957, 0.7398673544583617]
[[greet]]	Hi. Business has been fantastic!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.7398673544583617, 0.740604274134117]
[[greet]]	Hello. I'm great. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.740604274134117, 0.7420781134856277]
[[greet]]	Hi. I'm good. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.7420781134856277, 0.7450257921886491]
[[greet]]	Greetings, [interlocutor.first_name].	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda speaker, interlocutor: speaker.knows(interlocutor, 'first name')^ResolveObligation:greet^ResolveObligation:greet	[0.7450257921886491, 0.7464996315401597]
[[greet]]	Greetings, [interlocutor.first_name]!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^ResolveObligation:greet^ResolveObligation:greet^PushObligation:greet^Preconditions:lambda speaker, interlocutor: speaker.knows(interlocutor, 'first name')	[0.7464996315401597, 0.747236551215915]
[[greet]]	Hi. How's work to[speaker.game.time_of_day]?	ResolveObligation:greet^PushTopic:work^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^PushObligation:small talk:how is work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.routine.working	[0.747236551215915, 0.7479734708916703]
[[greet]]	Hello. I'm fantastic. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.7479734708916703, 0.7523949889462024]
[[greet]]	Hello. I'm well. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.7523949889462024, 0.7531319086219577]
[[greet]]	Hi. I'm alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.7531319086219577, 0.7546057479734684]
[[greet]]	Hi. I'm great. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.7546057479734684, 0.7553426676492236]
[[greet]]	Hi. How's work going to[speaker.game.time_of_day]?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how is work^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.routine.working^PushTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^AddressTopic:work	[0.7553426676492236, 0.7560795873249789]
[[greet]]	Greetings. I'm great. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.7560795873249789, 0.7568165070007342]
[[greet]]	Hi. I'm great. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.7568165070007342, 0.7575534266764895]
[[greet]]	Greetings. How's it going?	ResolveObligation:greet^PushObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.7575534266764895, 0.7590272660280002]
[[greet]]	Greetings. How's the business?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.7590272660280002, 0.7597641857037555]
[[greet]]	Hello. I'm good. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.7597641857037555, 0.7641857037582875]
[[greet]]	Hi. I'm good. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.7641857037582875, 0.7656595431097982]
[[greet]]	Hello. I'm alright. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.7656595431097982, 0.7671333824613089]
[[greet]]	Hi. Work's well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.7671333824613089, 0.7686072218128196]
[[greet]]	Hey. I'm fantastic. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.7686072218128196, 0.7708179808400856]
[[greet]]	Hello. Work's good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.7708179808400856, 0.7767133382461283]
[[greet]]	Hi. I'm well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.7767133382461283, 0.7774502579218836]
[[greet]]	Hello. I'm well. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.7774502579218836, 0.780397936624905]
[[greet]]	Hello. I'm great. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.780397936624905, 0.7818717759764157]
[[greet]]	Hello. I'm great. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.7818717759764157, 0.7892409727339691]
[[greet]]	Hello. I'm well. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.7892409727339691, 0.7936624907885012]
[[greet]]	Hey. How's the business?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.7936624907885012, 0.7951363301400118]
[[greet]]	Hello. I'm alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.7951363301400118, 0.7958732498157671]
[[greet]]	Hi. I'm great. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.7958732498157671, 0.7973470891672778]
[[greet]]	Hi. I'm well. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.7973470891672778, 0.7980840088430331]
[[greet]]	Hello. Work's fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.7980840088430331, 0.8025055268975652]
[[greet]]	Hey. I'm fantastic. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.8025055268975652, 0.8047162859248311]
[[greet]]	Hello. I'm alright. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.8047162859248311, 0.8076639646278525]
[[greet]]	Greetings. Work's fantastic.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.8076639646278525, 0.8113485630066292]
[[greet]]	Hello. I'm fantastic. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.8113485630066292, 0.8120854826823845]
[[greet]]	Greetings. I'm fantastic. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.8120854826823845, 0.8128224023581397]
[[greet]]	Uh, Hey...	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:greet	[0.8128224023581397, 0.8142962417096504]
[[greet]]	Hello. How's your company doing?	ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how is business^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.8142962417096504, 0.8157700810611611]
[[greet]]	Greetings. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.8157700810611611, 0.8165070007369164]
[[greet]]	Greetings. I'm alright. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.8165070007369164, 0.8172439204126717]
[[greet]]	Hi. I'm great. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.8172439204126717, 0.8187177597641824]
[[greet]]	Hey. How's work?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how is work^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.occupation is not None^PushTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^AddressTopic:work	[0.8187177597641824, 0.8216654384672037]
[[greet]]	Hey. I'm alright. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.8216654384672037, 0.8238761974944697]
[[greet]]	Hi. I'm good. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.8238761974944697, 0.8260869565217357]
[[greet]]	Hello. I'm alright. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.8260869565217357, 0.8275607958732464]
[[greet]]	Hi. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.8275607958732464, 0.8282977155490017]
[[greet]]	Greetings. Business has been good!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.8282977155490017, 0.8297715549005124]
[[greet]]	Hi. I'm well. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.8297715549005124, 0.8305084745762676]
[[greet]]	Hi. Business has been great!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.8305084745762676, 0.8312453942520229]
[[greet]]	Hi. I'm good. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.8312453942520229, 0.8319823139277782]
[[greet]]	Hey.	PushObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')	[0.8319823139277782, 0.8327192336035335]
[[greet]]	Hello. I'm good. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.8327192336035335, 0.8341930729550442]
[[greet]]	Hi. How's business?	ResolveObligation:greet^PushObligation:small talk:how is business^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^PushTopic:work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.occupation and interlocutor.occupation.company.owner.person is interlocutor	[0.8341930729550442, 0.8356669123065549]
[[greet]]	Hi. How's work?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how is work^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.occupation is not None^PushTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^AddressTopic:work	[0.8356669123065549, 0.8371407516580656]
[[greet]]	Hey!	ResolveObligation:greet^PushObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4	[0.8371407516580656, 0.8386145910095762]
[[greet]]	Hi. I'm fantastic. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.8386145910095762, 0.8393515106853315]
[[greet]]	Hi. How's it going?	ResolveObligation:greet^PushObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.8393515106853315, 0.8408253500368422]
[[greet]]	Hello. I'm well. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.8408253500368422, 0.8437730287398636]
[[greet]]	Hi!	Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')	[0.8437730287398636, 0.8445099484156189]
[[greet]]	Hello. I'm good. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.8445099484156189, 0.8489314664701509]
[[greet]]	Hey. I'm alright.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.8489314664701509, 0.8518791451731723]
[[greet]]	Hello. I'm fantastic. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.8518791451731723, 0.8548268238761937]
[[greet]]	Hey. Work's fantastic.	ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^ResolveObligation:small talk:how is work	[0.8548268238761937, 0.8658806190125238]
[[greet]]	Hello. I'm well. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.8658806190125238, 0.8666175386882791]
[[greet]]	Hey. I'm great. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.8666175386882791, 0.8710390567428111]
[[greet]]	Greetings. I'm good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.8710390567428111, 0.8732498157700771]
[[greet]]	Hi. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.8732498157700771, 0.8739867354458324]
[[greet]]	Hey. I'm well. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.8739867354458324, 0.8754605747973431]
[[greet]]	Hello. I'm good. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.8754605747973431, 0.8798820928518751]
[[greet]]	Hey. How's work going to[speaker.game.time_of_day]?	ResolveObligation:greet^PushObligation:small talk:how is work^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda interlocutor: interlocutor.routine.working^ResolveObligation:greet^PushTopic:work^Moves:make small talk^AddressTopic:work	[0.8798820928518751, 0.8820928518791411]
[[greet]]	Hey. Business has been great.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.8820928518791411, 0.8843036109064071]
[[greet]]	Hi. Business has been good!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.8843036109064071, 0.8857774502579178]
[[greet]]	Hi. I'm fantastic. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.8857774502579178, 0.8879882092851837]
[[greet]]	Hi. I'm fantastic. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.8879882092851837, 0.8909358879882051]
[[greet]]	Hey. Business has been great!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.8909358879882051, 0.8938835666912265]
[[greet]]	Hello. I'm fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.8938835666912265, 0.8953574060427372]
[[greet]]	Hi. Business has been good.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.8953574060427372, 0.8968312453942479]
[[greet]]	Hey. I'm good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.8968312453942479, 0.9034635224760459]
[[greet]]	Hi. I'm good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.9034635224760459, 0.9042004421518012]
[[greet]]	Hello. I'm alright. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.9042004421518012, 0.9100957995578439]
[[greet]]	Hi. I'm alright. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.9100957995578439, 0.9108327192335992]
[[greet]]	Hey. I'm great.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.9108327192335992, 0.9130434782608652]
[[greet]]	Hi. I'm fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.9130434782608652, 0.9137803979366205]
[[greet]]	Greetings. I'm well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')	[0.9137803979366205, 0.9145173176123758]
[[greet]]	Hello. Business has been fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.9145173176123758, 0.9159911569638864]
[[greet]]	Hey. I'm good. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.9159911569638864, 0.9218865143699292]
[[greet]]	Hi. I'm good. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.9218865143699292, 0.9233603537214399]
[[greet]]	Greetings. Business has been well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^AddressTopic:work^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^ResolveObligation:small talk:how is business	[0.9233603537214399, 0.9240972733971952]
[[greet]]	Greetings. I'm good. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.9240972733971952, 0.9255711127487058]
[[greet]]	Hello...	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^PushObligation:greet	[0.9255711127487058, 0.9263080324244611]
[[greet]]	Hello. I'm great. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.9263080324244611, 0.9307295504789932]
[[greet]]	Hi. I'm great. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.9307295504789932, 0.9314664701547485]
[[greet]]	Hi. I'm well. How about you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^PushObligation:small talk:how are you	[0.9314664701547485, 0.9322033898305038]
[[greet]]	Hey. I'm well. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.9322033898305038, 0.9366249078850358]
[[greet]]	Hello. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.9366249078850358, 0.9380987472365465]
[[greet]]	Greetings. I'm fantastic. How about you?	PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.9380987472365465, 0.9388356669123018]
[[greet]]	Uh, Hello...	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion < -0.4^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:greet	[0.9388356669123018, 0.9410464259395678]
[[greet]]	Hey. I'm alright. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.9410464259395678, 0.9454679439940998]
[[greet]]	Hey!	Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')	[0.9454679439940998, 0.9484156226971212]
[[greet]]	Hello. I'm good. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.9484156226971212, 0.9513633014001426]
[[greet]]	Hey. I'm alright. How are you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.9513633014001426, 0.954310980103164]
[[greet]]	Greetings. I'm great. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.954310980103164, 0.9557848194546746]
[[greet]]	Hello. How's work to[speaker.game.time_of_day]?	ResolveObligation:greet^PushTopic:work^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^PushObligation:small talk:how is work^Moves:make small talk^Preconditions:lambda interlocutor: interlocutor.routine.working	[0.9557848194546746, 0.9565217391304299]
[[greet]]	Greetings. Business has been great!	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^AddressTopic:work^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^ResolveObligation:small talk:how is business	[0.9565217391304299, 0.9579955784819406]
[[greet]]	Hey. Business has been alright!	ResolveObligation:greet^AddressTopic:work^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Preconditions:lambda speaker: speaker.personality.extroversion > 0.4^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^Moves:make small talk^ResolveObligation:small talk:how is business	[0.9579955784819406, 0.9624170965364727]
[[greet]]	Hey. Business has been alright.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.9624170965364727, 0.9646278555637386]
[[greet]]	Hi. Work's good.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.9646278555637386, 0.96757553426676]
[[greet]]	Hello. I'm alright. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.96757553426676, 0.9719970523212921]
[[greet]]	Greetings. I'm fantastic. And you?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.9719970523212921, 0.9734708916728028]
[[greet]]	Greetings. Work's well.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^Preconditions:lambda speaker: speaker.occupation is not None^ResolveObligation:greet^ResolveObligation:greet^ResolveObligation:small talk:how is work^AddressTopic:work^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk	[0.9734708916728028, 0.9749447310243134]
[[greet]]	Hi. I'm great. How's it going?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.9749447310243134, 0.9756816507000687]
[[greet]]	Hi. I'm fantastic.	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^ResolveObligation:small talk:how are you^ResolveObligation:greet^Moves:make small talk^ResolveObligation:greet	[0.9756816507000687, 0.9771554900515794]
[[greet]]	Hey. I'm great. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.9771554900515794, 0.9815770081061115]
[[greet]]	Greetings. Business has been great.	ResolveObligation:greet^Preconditions:lambda speaker: speaker.occupation and speaker.occupation.company.owner.person is speaker^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^AddressTopic:work^ResolveObligation:small talk:how is business	[0.9815770081061115, 0.9823139277818668]
[[greet]]	Greetings. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^PushObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Moves:make small talk^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')	[0.9823139277818668, 0.9830508474576221]
[[greet]]	Hello. I'm great. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.9830508474576221, 0.9837877671333773]
[[greet]]	Greetings. I'm great. And you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.9837877671333773, 0.985261606484888]
[[greet]]	Hello. I'm fantastic. How have you been?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.985261606484888, 0.9911569638909308]
[[greet]]	Hello. I'm good. How are you?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.9911569638909308, 0.9926308032424415]
[[greet]]	Hello. I'm great. How's it going?	Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:small talk:how are you^ResolveObligation:greet^ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'greet')^Moves:make small talk^PushObligation:small talk:how are you	[0.9926308032424415, 0.9970523212969735]
[[greet]]	Hello. I'm fantastic. How have you been?	ResolveObligation:greet^Preconditions:lambda conversation, interlocutor: not any(o for o in conversation.resolved_obligations[interlocutor] if o.name == 'small talk:how are you')^ResolveObligation:small talk:how are you^ResolveObligation:greet^Preconditions:lambda conversation, speaker: not any(turn for turn in conversation.completed_turns if turn.speaker is speaker and turn.line_of_dialogue.discourse_act.name == 'greet')^ResolveObligation:greet^Moves:make small talk^PushObligation:small talk:how are you	[0.9970523212969735, 0.9999999999999949]
